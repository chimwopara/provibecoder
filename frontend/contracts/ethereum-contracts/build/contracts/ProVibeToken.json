{
  "contractName": "ProVibeToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeReceiver",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "projectId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "role",
          "type": "string"
        }
      ],
      "name": "EquityDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "projectId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalTokens",
          "type": "uint256"
        }
      ],
      "name": "ProjectTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "platformFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "projectTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "founderTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "developerTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "legalTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investorTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "platformTokens",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "initialized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "projectId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "totalTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "founderPercent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "developerPercent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "legalPercent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investorPercent",
          "type": "uint256"
        }
      ],
      "name": "createProjectTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "projectId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "founder",
          "type": "address"
        }
      ],
      "name": "distributeFounderEquity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "projectId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "developer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "distributeDeveloperEquity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "projectId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "legalExpert",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "distributeLegalEquity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "projectId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "distributeInvestorEquity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFeePercent",
          "type": "uint256"
        }
      ],
      "name": "updatePlatformFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFeeReceiver",
          "type": "address"
        }
      ],
      "name": "updateFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "projectId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "role",
          "type": "uint8"
        }
      ],
      "name": "getAvailableTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"EquityDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"}],\"name\":\"ProjectTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"founderPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developerPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"legalPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investorPercent\",\"type\":\"uint256\"}],\"name\":\"createProjectTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"developer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeDeveloperEquity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"founder\",\"type\":\"address\"}],\"name\":\"distributeFounderEquity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeInvestorEquity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"legalExpert\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeLegalEquity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"projectId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"getAvailableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"projectTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"founderTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developerTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"legalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investorTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"platformTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeReceiver\",\"type\":\"address\"}],\"name\":\"updateFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeePercent\",\"type\":\"uint256\"}],\"name\":\"updatePlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token for the ProVibeCoder platform This token represents equity in projects and can be distributed to contributors based on their work.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"constructor\":{\"details\":\"Constructor - initializes the token\",\"params\":{\"_feeReceiver\":\"The address to receive platform fees\",\"initialOwner\":\"The initial owner of the contract\"}},\"createProjectTokens(bytes32,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Creates tokens for a new project\",\"params\":{\"developerPercent\":\"Percentage of tokens allocated to developers (in basis points)\",\"founderPercent\":\"Percentage of tokens allocated to the founder (in basis points, 1% = 100)\",\"investorPercent\":\"Percentage of tokens allocated to investors (in basis points)\",\"legalPercent\":\"Percentage of tokens allocated to legal experts (in basis points)\",\"projectId\":\"Unique identifier for the project\",\"totalTokens\":\"Total number of tokens to allocate for this project\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"distributeDeveloperEquity(bytes32,address,uint256)\":{\"details\":\"Distributes developer equity for a project\",\"params\":{\"amount\":\"The amount of tokens to distribute\",\"developer\":\"The developer's address\",\"projectId\":\"The project identifier\"}},\"distributeFounderEquity(bytes32,address)\":{\"details\":\"Distributes founder equity for a project\",\"params\":{\"founder\":\"The founder's address\",\"projectId\":\"The project identifier\"}},\"distributeInvestorEquity(bytes32,address,uint256)\":{\"details\":\"Distributes investor equity for a project\",\"params\":{\"amount\":\"The amount of tokens to distribute\",\"investor\":\"The investor's address\",\"projectId\":\"The project identifier\"}},\"distributeLegalEquity(bytes32,address,uint256)\":{\"details\":\"Distributes legal expert equity for a project\",\"params\":{\"amount\":\"The amount of tokens to distribute\",\"legalExpert\":\"The legal expert's address\",\"projectId\":\"The project identifier\"}},\"getAvailableTokens(bytes32,uint8)\":{\"details\":\"Gets the remaining available tokens for a specific role in a project\",\"params\":{\"projectId\":\"The project identifier\",\"role\":\"The role (1=founder, 2=developer, 3=legal, 4=investor)\"},\"returns\":{\"_0\":\"The amount of tokens available for the specified role\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the current total supply of tokens\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateFeeReceiver(address)\":{\"details\":\"Updates the fee receiver address\",\"params\":{\"newFeeReceiver\":\"New address to receive platform fees\"}},\"updatePlatformFee(uint256)\":{\"details\":\"Updates the platform fee percentage\",\"params\":{\"newFeePercent\":\"New fee percentage (in basis points, 1% = 100)\"}}},\"title\":\"ProVibeToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ProVibeToken.sol\":\"ProVibeToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/ProVibeToken.sol\":{\"keccak256\":\"0xd64fe07e7869127a5b89ed61007ed78aa5d3b198b1b6bdf1316743f02f068a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://845151a01a1c4aa44ce2cada666ccfc76661415281544307bacae677c97fe347\",\"dweb:/ipfs/QmUDsnExoaGPSA9vSwYcwXzxrk1TJRLyQ21PKR1sd7qPL6\"]}},\"version\":1}",
  "bytecode": "0x6080604090808252346200051557818162001c5a803803809162000024828562000519565b83398101031262000515576200003a816200053d565b6200004960208093016200053d565b8351915f916006805493856200005f8662000552565b918282526001968988821691825f14620004f6575050600114620004b5575b6200008c9250038662000519565b8651935f8560075491620000a08362000552565b928383528a85821691825f146200049657505060011462000454575b620000ca9250038662000519565b85516001600160401b03908181116200039e5760039080620000ed835462000552565b99601f9a8c8c821162000423575b50508b908b8311600114620003be575f92620003b2575b50505f1982841b1c191690841b1781555b86519182116200039e576004966200013c885462000552565b8a8a821162000362575b50508990898411600114620002f9579383949184925f95620002ed575b50501b925f19911b1c19161784555b6001600160a01b03928316948515620002d757600580546001600160a01b0319808216891790925590969085167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3620001cf825462000552565b818111620002b6575b507f50726f5669626520546f6b656e0000000000000000000000000000000000001a82556007546200020a9062000552565b81811162000294575b50506214159560ea1b0160075560326009551692831562000246575050600a541617600a55516116b49081620005a68239f35b845162461bcd60e51b815291820152602360248201527f4665652072656365697665722063616e6e6f74206265207a65726f206164647260448201526265737360e81b606482015260849150fd5b620002ae9160075f52885f20910160051c8101906200058d565b5f8062000213565b620002d090835f5282895f20910160051c8101906200058d565b5f620001d8565b8751631e4fbdf760e01b81525f81870152602490fd5b015193505f8062000163565b9190601f19841692895f52848c5f20948d5f905b898383106200034957505050106200032f575b50505050811b01845562000172565b01519060f8845f19921b161c191690555f80808062000320565b8686015189559097019694850194889350018e6200030d565b6200038c918a5f528b825f209181880160051c830193881062000394575b0160051c01906200058d565b5f8a62000146565b9250819262000380565b634e487b7160e01b5f52604160045260245ffd5b015190505f8062000112565b5f8581528d8120889550929190601f198516908f5b8282106200040b5750508411620003f3575b505050811b01815562000123565b01515f1983861b60f8161c191690555f8080620003e5565b8385015186558a979095019493840193018f620003d3565b6200044c91865f528d825f209181870160051c830193871062000394570160051c01906200058d565b5f8c620000fb565b505060075f528588805f20845f915b8583106200047c575050620000ca9350820101620000bc565b80919294505483858c010152019101899084899362000463565b60ff191684820152620000ca94151560051b8401019150620000bc9050565b5050815f528587805f20875f915b858310620004dc5750506200008c93508201016200007e565b80919294505483858c0101520191018890878993620004c3565b60ff1916848201526200008c94151560051b84010191506200007e9050565b5f80fd5b601f909101601f19168101906001600160401b038211908210176200039e57604052565b51906001600160a01b03821682036200051557565b90600182811c9216801562000582575b60208310146200056e57565b634e487b7160e01b5f52602260045260245ffd5b91607f169162000562565b81811062000599575050565b5f81556001016200058d56fe60406080815260049081361015610014575f80fd5b5f91823560e01c806305eb34e914610fb957806306a788ea14610cc257806306fdde0314610bce578063095ea7b314610b2557806318160ddd14610b0657806323b872dd14610ac95780632c5e52151461094a578063313ce5671461092e57806332cb6b0c1461090857806342966c68146108ea578063688687001461079757806370a0823114610760578063715018a61461070357806379cc6790146106d05780638c639a85146106b15780638da5cb5b1461068857806395d89b4114610584578063a9059cbb14610553578063aa0b5988146104eb578063b3f00674146104c2578063baa84f721461048b578063c69bebe4146103ed578063c849042514610298578063d2fd76251461021b578063dd62ed3e146101ce5763f2fde38b1461013c575f80fd5b346101ca5760203660031901126101ca57610155611109565b9061015e6111aa565b6001600160a01b039182169283156101b4575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b505034610217578060031936011261021757806020926101ec611109565b6101f4611123565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346101ca5760203660031901126101ca57816101009382358152600b6020522060ff815416926001820154926002830154906003840154908401549160058501549360ff6007600688015497015416968151981515895260208901528701526060860152608085015260a084015260c0830152151560e0820152f35b5090346101ca576102a836611139565b9192906102b36111aa565b838652600b602052818620946102cc60ff87541661148a565b6102dc60ff60078801541661152c565b6001600160a01b0382169586156103aa576005906102fb861515611578565b019081549081861161035657509261033385809460089461032c5f8051602061165f833981519152996080996115c4565b90556114cf565b80519283528060208401528201526734b73b32b9ba37b960c11b6060820152a380f35b608490602086519162461bcd60e51b8352820152602860248201527f416d6f756e74206578636565647320617661696c61626c6520696e766573746f6044820152677220746f6b656e7360c01b6064820152fd5b835162461bcd60e51b8152602081840152601f60248201527f496e766573746f7220616464726573732063616e6e6f74206265207a65726f006044820152606490fd5b50346101ca5760203660031901126101ca57610407611109565b61040f6111aa565b6001600160a01b031691821561043c5750506bffffffffffffffffffffffff60a01b600a541617600a5580f35b906020608492519162461bcd60e51b8352820152602360248201527f4665652072656365697665722063616e6e6f74206265207a65726f206164647260448201526265737360e81b6064820152fd5b50346101ca57816003193601126101ca576024359260ff841684036104bf57506020926104b891356115d1565b9051908152f35b80fd5b505034610217578160031936011261021757600a5490516001600160a01b039091168152602090f35b50346101ca5760203660031901126101ca578035916105086111aa565b6101f4831161051957505060095580f35b906020606492519162461bcd60e51b835282015260146024820152734665652063616e6e6f742065786365656420352560601b6044820152fd5b50503461021757806003193601126102175760209061057d610573611109565b602435903361120c565b5160018152f35b50919034610217578160031936011261021757805191809380549160019083821c9282851694851561067e575b602095868610811461066b5785895290811561064757506001146105ef575b6105eb87876105e1828c03836111d6565b5191829182611163565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061063457505050826105eb946105e192820101945f806105d0565b8054868501880152928601928101610616565b60ff19168887015250505050151560051b83010192506105e1826105eb5f806105d0565b634e487b7160e01b845260228352602484fd5b93607f16936105b1565b50503461021757816003193601126102175760055490516001600160a01b039091168152602090f35b5050346102175781600319360112610217576020906009549051908152f35b505034610217573660031901126104bf576107006106ec611109565b602435906106fb823383611308565b6113d9565b80f35b83346104bf57806003193601126104bf5761071c6111aa565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102175760203660031901126102175760209181906001600160a01b03610788611109565b16815280845220549051908152f35b5090346101ca576107a736611139565b9192906107b26111aa565b838652600b602052818620946107cb60ff87541661148a565b6107db60ff60078801541661152c565b6001600160a01b03821695861561089b5781906107f9861515611578565b019081549081861161084a57509261082a85809460059461032c5f8051602061165f833981519152996080996115c4565b8051928352806020840152820152641b1959d85b60da1b6060820152a380f35b608490602086519162461bcd60e51b8352820152602560248201527f416d6f756e74206578636565647320617661696c61626c65206c6567616c20746044820152646f6b656e7360d81b6064820152fd5b835162461bcd60e51b8152602081840152602360248201527f4c6567616c2065787065727420616464726573732063616e6e6f74206265207a60448201526265726f60e81b6064820152608490fd5b838234610217576020366003190112610217576107009035336113d9565b505034610217578160031936011261021757602090516a52b7d2dcc80cd2e40000008152f35b5050346102175781600319360112610217576020905160128152f35b5090346101ca57806003193601126101ca57813590610967611123565b61096f6111aa565b828552600b6020528185209361098860ff86541661148a565b6001600160a01b0391808316918215610a8657600787019060ff825416610a43575092608094928660089387966109c560028c01928354906114cf565b6109da600686600a54169c019b8c54906114cf565b600160ff19825416179055548551908152856020820152600786820152663337bab73232b960c91b60608201525f8051602061165f833981519152978891a3600a5416955491805192835280602084015282015267706c6174666f726d60c01b6060820152a380f35b606490602087519162461bcd60e51b8352820152601b60248201527f50726f6a65637420616c726561647920696e697469616c697a656400000000006044820152fd5b606490602086519162461bcd60e51b8352820152601e60248201527f466f756e64657220616464726573732063616e6e6f74206265207a65726f00006044820152fd5b5050346102175760603660031901126102175760209061057d610aea611109565b610af2611123565b60443591610b01833383611308565b61120c565b5050346102175781600319360112610217576020906008549051908152f35b50346101ca57816003193601126101ca57610b3e611109565b602435903315610bb7576001600160a01b0316918215610ba057508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b5090346101ca57826003193601126101ca57805191836003549060019082821c928281168015610cb8575b6020958686108214610ca55750848852908115610c835750600114610c2a575b6105eb86866105e1828b03836111d6565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610c7057505050826105eb946105e192820101945f610c19565b8054868501880152928601928101610c53565b60ff191687860152505050151560051b83010192506105e1826105eb5f610c19565b634e487b7160e01b845260229052602483fd5b93607f1693610bf9565b509190346102175760c036600319011261021757823590602490813590604435926064356084359460a43598610cf66111aa565b878952602096600b885260ff868b205416610f77578615610f29576127109283610d2d8d610d2885610d288a876112e7565b6112e7565b03610ee7576a52b7d2dcc80cd2e4000000610d4a896008546112e7565b11610e9b57610d7e84610d7681610d6e81610d6681978f611477565b04998d611477565b04948b611477565b049c89611477565b0492610d8c60095489611477565b049386519561010087019087821067ffffffffffffffff831117610e8a5750928b9c879693600796938b8e9f977f44effbddf56fcfa4173159bd8b4fe3dcb546589ec21115e7236e3adfe128f5889f8f600b8f9291610e739f9260e08e94610e3a97875260018152838101988952868101998a52606081019a8b52608081019b8c5260a081019d8e5260c081019e8f52019d8e52835252209a5115158b9060ff801983541691151516179055565b5160018a0155516002890155516003880155519086015551600585015551600684015551151591019060ff801983541691151516179055565b610e7f826008546112e7565b60085551908152a280f35b634e487b7160e01b8d52604185528cfd5b865162461bcd60e51b81528084018a90526021818801527f576f756c6420657863656564206d6178696d756d20746f6b656e20737570706c6044820152607960f81b6064820152608490fd5b865162461bcd60e51b81528084018a9052601f818801527f50657263656e7461676573206d7573742061646420757020746f2031303025006044820152606490fd5b855162461bcd60e51b81528083018990526023818701527f546f74616c20746f6b656e73206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b855162461bcd60e51b8152808301899052601e818701527f50726f6a65637420746f6b656e7320616c7265616479206372656174656400006044820152606490fd5b5090346101ca57610fc936611139565b919290610fd46111aa565b838652600b60205281862094610fed60ff87541661148a565b610ffd60ff60078801541661152c565b6001600160a01b0382169586156110c65760039061101c861515611578565b019081549081861161107157509261104d85809460099461032c5f8051602061165f833981519152996080996115c4565b8051928352806020840152820152683232bb32b637b832b960b91b6060820152a380f35b608490602086519162461bcd60e51b8352820152602960248201527f416d6f756e74206578636565647320617661696c61626c6520646576656c6f70604482015268657220746f6b656e7360b81b6064820152fd5b835162461bcd60e51b8152602081840181905260248201527f446576656c6f70657220616464726573732063616e6e6f74206265207a65726f6044820152606490fd5b600435906001600160a01b038216820361111f57565b5f80fd5b602435906001600160a01b038216820361111f57565b606090600319011261111f57600435906024356001600160a01b038116810361111f579060443590565b602080825282518183018190529093925f5b82811061119657505060409293505f838284010152601f8019910116010190565b818101860151848201604001528501611175565b6005546001600160a01b031633036111be57565b60405163118cdaa760e01b8152336004820152602490fd5b90601f8019910116810190811067ffffffffffffffff8211176111f857604052565b634e487b7160e01b5f52604160045260245ffd5b916001600160a01b038084169283156112cf57169283156112b7575f9083825281602052604082205490838210611285575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b81525f6004820152602490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b919082018092116112f457565b634e487b7160e01b5f52601160045260245ffd5b9160018060a01b03809316915f9383855260016020526040938486209183169182875260205284862054925f198410611345575b50505050505050565b8484106113a9575080156113915781156113795785526001602052838520908552602052039120555f80808080808061133c565b8451634a1406b160e11b815260048101879052602490fd5b845163e602df0560e01b815260048101879052602490fd5b8551637dc7a0d960e11b81526001600160a01b039190911660048201526024810184905260448101859052606490fd5b906001600160a01b0382169081156112cf575f92828452836020526040842054908282106114455750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b818102929181159184041417156112f457565b1561149157565b60405162461bcd60e51b8152602060048201526016602482015275141c9bda9958dd08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b6001600160a01b03169081156112b7577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826115105f946002546112e7565b60025584845283825260408420818154019055604051908152a3565b1561153357565b60405162461bcd60e51b815260206004820152601760248201527f50726f6a656374206e6f7420696e697469616c697a65640000000000000000006044820152606490fd5b1561157f57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b919082039182116112f457565b5f52600b60205260ff60405f20916115eb8284541661148a565b1660018114611656576002811461164e57600381146116465760041461163f5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c696420726f6c6560a01b6044820152606490fd5b6005015490565b506004015490565b506003015490565b50600201549056fe1b906fa70dc75749576366c26fdcc5e2e28261ecb888ed362ffbd7222ec3de6ca26469706673582212204be57143ba885292d3085672b0e80c7e0620d0632846234fef312bdd48c3fafb64736f6c63430008140033",
  "deployedBytecode": "0x60406080815260049081361015610014575f80fd5b5f91823560e01c806305eb34e914610fb957806306a788ea14610cc257806306fdde0314610bce578063095ea7b314610b2557806318160ddd14610b0657806323b872dd14610ac95780632c5e52151461094a578063313ce5671461092e57806332cb6b0c1461090857806342966c68146108ea578063688687001461079757806370a0823114610760578063715018a61461070357806379cc6790146106d05780638c639a85146106b15780638da5cb5b1461068857806395d89b4114610584578063a9059cbb14610553578063aa0b5988146104eb578063b3f00674146104c2578063baa84f721461048b578063c69bebe4146103ed578063c849042514610298578063d2fd76251461021b578063dd62ed3e146101ce5763f2fde38b1461013c575f80fd5b346101ca5760203660031901126101ca57610155611109565b9061015e6111aa565b6001600160a01b039182169283156101b4575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b505034610217578060031936011261021757806020926101ec611109565b6101f4611123565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346101ca5760203660031901126101ca57816101009382358152600b6020522060ff815416926001820154926002830154906003840154908401549160058501549360ff6007600688015497015416968151981515895260208901528701526060860152608085015260a084015260c0830152151560e0820152f35b5090346101ca576102a836611139565b9192906102b36111aa565b838652600b602052818620946102cc60ff87541661148a565b6102dc60ff60078801541661152c565b6001600160a01b0382169586156103aa576005906102fb861515611578565b019081549081861161035657509261033385809460089461032c5f8051602061165f833981519152996080996115c4565b90556114cf565b80519283528060208401528201526734b73b32b9ba37b960c11b6060820152a380f35b608490602086519162461bcd60e51b8352820152602860248201527f416d6f756e74206578636565647320617661696c61626c6520696e766573746f6044820152677220746f6b656e7360c01b6064820152fd5b835162461bcd60e51b8152602081840152601f60248201527f496e766573746f7220616464726573732063616e6e6f74206265207a65726f006044820152606490fd5b50346101ca5760203660031901126101ca57610407611109565b61040f6111aa565b6001600160a01b031691821561043c5750506bffffffffffffffffffffffff60a01b600a541617600a5580f35b906020608492519162461bcd60e51b8352820152602360248201527f4665652072656365697665722063616e6e6f74206265207a65726f206164647260448201526265737360e81b6064820152fd5b50346101ca57816003193601126101ca576024359260ff841684036104bf57506020926104b891356115d1565b9051908152f35b80fd5b505034610217578160031936011261021757600a5490516001600160a01b039091168152602090f35b50346101ca5760203660031901126101ca578035916105086111aa565b6101f4831161051957505060095580f35b906020606492519162461bcd60e51b835282015260146024820152734665652063616e6e6f742065786365656420352560601b6044820152fd5b50503461021757806003193601126102175760209061057d610573611109565b602435903361120c565b5160018152f35b50919034610217578160031936011261021757805191809380549160019083821c9282851694851561067e575b602095868610811461066b5785895290811561064757506001146105ef575b6105eb87876105e1828c03836111d6565b5191829182611163565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061063457505050826105eb946105e192820101945f806105d0565b8054868501880152928601928101610616565b60ff19168887015250505050151560051b83010192506105e1826105eb5f806105d0565b634e487b7160e01b845260228352602484fd5b93607f16936105b1565b50503461021757816003193601126102175760055490516001600160a01b039091168152602090f35b5050346102175781600319360112610217576020906009549051908152f35b505034610217573660031901126104bf576107006106ec611109565b602435906106fb823383611308565b6113d9565b80f35b83346104bf57806003193601126104bf5761071c6111aa565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102175760203660031901126102175760209181906001600160a01b03610788611109565b16815280845220549051908152f35b5090346101ca576107a736611139565b9192906107b26111aa565b838652600b602052818620946107cb60ff87541661148a565b6107db60ff60078801541661152c565b6001600160a01b03821695861561089b5781906107f9861515611578565b019081549081861161084a57509261082a85809460059461032c5f8051602061165f833981519152996080996115c4565b8051928352806020840152820152641b1959d85b60da1b6060820152a380f35b608490602086519162461bcd60e51b8352820152602560248201527f416d6f756e74206578636565647320617661696c61626c65206c6567616c20746044820152646f6b656e7360d81b6064820152fd5b835162461bcd60e51b8152602081840152602360248201527f4c6567616c2065787065727420616464726573732063616e6e6f74206265207a60448201526265726f60e81b6064820152608490fd5b838234610217576020366003190112610217576107009035336113d9565b505034610217578160031936011261021757602090516a52b7d2dcc80cd2e40000008152f35b5050346102175781600319360112610217576020905160128152f35b5090346101ca57806003193601126101ca57813590610967611123565b61096f6111aa565b828552600b6020528185209361098860ff86541661148a565b6001600160a01b0391808316918215610a8657600787019060ff825416610a43575092608094928660089387966109c560028c01928354906114cf565b6109da600686600a54169c019b8c54906114cf565b600160ff19825416179055548551908152856020820152600786820152663337bab73232b960c91b60608201525f8051602061165f833981519152978891a3600a5416955491805192835280602084015282015267706c6174666f726d60c01b6060820152a380f35b606490602087519162461bcd60e51b8352820152601b60248201527f50726f6a65637420616c726561647920696e697469616c697a656400000000006044820152fd5b606490602086519162461bcd60e51b8352820152601e60248201527f466f756e64657220616464726573732063616e6e6f74206265207a65726f00006044820152fd5b5050346102175760603660031901126102175760209061057d610aea611109565b610af2611123565b60443591610b01833383611308565b61120c565b5050346102175781600319360112610217576020906008549051908152f35b50346101ca57816003193601126101ca57610b3e611109565b602435903315610bb7576001600160a01b0316918215610ba057508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b5090346101ca57826003193601126101ca57805191836003549060019082821c928281168015610cb8575b6020958686108214610ca55750848852908115610c835750600114610c2a575b6105eb86866105e1828b03836111d6565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610c7057505050826105eb946105e192820101945f610c19565b8054868501880152928601928101610c53565b60ff191687860152505050151560051b83010192506105e1826105eb5f610c19565b634e487b7160e01b845260229052602483fd5b93607f1693610bf9565b509190346102175760c036600319011261021757823590602490813590604435926064356084359460a43598610cf66111aa565b878952602096600b885260ff868b205416610f77578615610f29576127109283610d2d8d610d2885610d288a876112e7565b6112e7565b03610ee7576a52b7d2dcc80cd2e4000000610d4a896008546112e7565b11610e9b57610d7e84610d7681610d6e81610d6681978f611477565b04998d611477565b04948b611477565b049c89611477565b0492610d8c60095489611477565b049386519561010087019087821067ffffffffffffffff831117610e8a5750928b9c879693600796938b8e9f977f44effbddf56fcfa4173159bd8b4fe3dcb546589ec21115e7236e3adfe128f5889f8f600b8f9291610e739f9260e08e94610e3a97875260018152838101988952868101998a52606081019a8b52608081019b8c5260a081019d8e5260c081019e8f52019d8e52835252209a5115158b9060ff801983541691151516179055565b5160018a0155516002890155516003880155519086015551600585015551600684015551151591019060ff801983541691151516179055565b610e7f826008546112e7565b60085551908152a280f35b634e487b7160e01b8d52604185528cfd5b865162461bcd60e51b81528084018a90526021818801527f576f756c6420657863656564206d6178696d756d20746f6b656e20737570706c6044820152607960f81b6064820152608490fd5b865162461bcd60e51b81528084018a9052601f818801527f50657263656e7461676573206d7573742061646420757020746f2031303025006044820152606490fd5b855162461bcd60e51b81528083018990526023818701527f546f74616c20746f6b656e73206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b855162461bcd60e51b8152808301899052601e818701527f50726f6a65637420746f6b656e7320616c7265616479206372656174656400006044820152606490fd5b5090346101ca57610fc936611139565b919290610fd46111aa565b838652600b60205281862094610fed60ff87541661148a565b610ffd60ff60078801541661152c565b6001600160a01b0382169586156110c65760039061101c861515611578565b019081549081861161107157509261104d85809460099461032c5f8051602061165f833981519152996080996115c4565b8051928352806020840152820152683232bb32b637b832b960b91b6060820152a380f35b608490602086519162461bcd60e51b8352820152602960248201527f416d6f756e74206578636565647320617661696c61626c6520646576656c6f70604482015268657220746f6b656e7360b81b6064820152fd5b835162461bcd60e51b8152602081840181905260248201527f446576656c6f70657220616464726573732063616e6e6f74206265207a65726f6044820152606490fd5b600435906001600160a01b038216820361111f57565b5f80fd5b602435906001600160a01b038216820361111f57565b606090600319011261111f57600435906024356001600160a01b038116810361111f579060443590565b602080825282518183018190529093925f5b82811061119657505060409293505f838284010152601f8019910116010190565b818101860151848201604001528501611175565b6005546001600160a01b031633036111be57565b60405163118cdaa760e01b8152336004820152602490fd5b90601f8019910116810190811067ffffffffffffffff8211176111f857604052565b634e487b7160e01b5f52604160045260245ffd5b916001600160a01b038084169283156112cf57169283156112b7575f9083825281602052604082205490838210611285575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b81525f6004820152602490fd5b604051634b637e8f60e11b81525f6004820152602490fd5b919082018092116112f457565b634e487b7160e01b5f52601160045260245ffd5b9160018060a01b03809316915f9383855260016020526040938486209183169182875260205284862054925f198410611345575b50505050505050565b8484106113a9575080156113915781156113795785526001602052838520908552602052039120555f80808080808061133c565b8451634a1406b160e11b815260048101879052602490fd5b845163e602df0560e01b815260048101879052602490fd5b8551637dc7a0d960e11b81526001600160a01b039190911660048201526024810184905260448101859052606490fd5b906001600160a01b0382169081156112cf575f92828452836020526040842054908282106114455750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b818102929181159184041417156112f457565b1561149157565b60405162461bcd60e51b8152602060048201526016602482015275141c9bda9958dd08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b6001600160a01b03169081156112b7577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826115105f946002546112e7565b60025584845283825260408420818154019055604051908152a3565b1561153357565b60405162461bcd60e51b815260206004820152601760248201527f50726f6a656374206e6f7420696e697469616c697a65640000000000000000006044820152606490fd5b1561157f57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b919082039182116112f457565b5f52600b60205260ff60405f20916115eb8284541661148a565b1660018114611656576002811461164e57600381146116465760041461163f5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c696420726f6c6560a01b6044820152606490fd5b6005015490565b506004015490565b506003015490565b50600201549056fe1b906fa70dc75749576366c26fdcc5e2e28261ecb888ed362ffbd7222ec3de6ca26469706673582212204be57143ba885292d3085672b0e80c7e0620d0632846234fef312bdd48c3fafb64736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "431:9788:7:-:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;1889:5:7;;431:9788;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;431:9788:7;1896:7;431:9788;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;431:9788:7;;;;;;1667:13:2;431:9788:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;;;-1:-1:-1;;;;431:9788:7;;;;;;;;;;;;;;;;;;;;1690:17:2;431:9788:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;431:9788:7;;;;1273:26:0;;1269:95;;3004:6;431:9788:7;;-1:-1:-1;;;;;;431:9788:7;;;;;;;;;;;;;3052:40:0;-1:-1:-1;;3052:40:0;431:9788:7;;;;:::i;:::-;;;;;;;-1:-1:-1;431:9788:7;;;1896:7;431:9788;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;431:9788:7;1896:7;431:9788;873:2;;431:9788;;1945:26;;;431:9788;;;;2021:26;431:9788;;;2021:26;431:9788;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;-1:-1:-1;431:9788:7;;;;1896:7;-1:-1:-1;431:9788:7;;-1:-1:-1;431:9788:7;;;3004:6:0;431:9788:7;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;431:9788:7;;;-1:-1:-1;431:9788:7;;;3004:6:0;431:9788:7;;;;;:::i;:::-;;;;1269:95:0;431:9788:7;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;431:9788:7;;;1322:31:0;431:9788:7;;;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;;-1:-1:-1;431:9788:7;;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;;;;;;;-1:-1:-1;431:9788:7;;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;1690:17:2;431:9788:7;;-1:-1:-1;431:9788:7;;;;;-1:-1:-1;431:9788:7;;;;;-1:-1:-1;431:9788:7;;;;;;;;-1:-1:-1;431:9788:7;;;-1:-1:-1;;431:9788:7;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1896:7;-1:-1:-1;431:9788:7;;;;-1:-1:-1;431:9788:7;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;-1:-1:-1;431:9788:7;;;;;-1:-1:-1;431:9788:7;;;;-1:-1:-1;431:9788:7;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;-1:-1:-1;431:9788:7;;-1:-1:-1;431:9788:7;;;;;;;-1:-1:-1;;431:9788:7;;;;-1:-1:-1;;;;;431:9788:7;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;431:9788:7;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "431:9788:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;431:9788:7;;;;2627:22:0;;2623:91;;431:9788:7;;3004:6:0;431:9788:7;;;;;;;;3004:6:0;431:9788:7;;3052:40:0;;;;431:9788:7;;2623:91:0;431:9788:7;-1:-1:-1;;;2672:31:0;;;;;431:9788:7;;;;;2672:31:0;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;;;;;;1043:53;431:9788;;;;;;;1043:53;431:9788;1043:53;;431:9788;1043:53;;;;431:9788;1043:53;431:9788;1043:53;;431:9788;1043:53;;;431:9788;1043:53;;;;431:9788;1043:53;431:9788;1043:53;;;;431:9788;1043:53;;431:9788;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;;;:::i;:::-;431:9788:7;;;7940:13;431:9788;;;;;;7974:49;431:9788;;;;7974:49;:::i;:::-;8033:55;431:9788;8041:19;;;431:9788;;8033:55;:::i;:::-;-1:-1:-1;;;;;431:9788:7;;;8106:22;;431:9788;;8254:22;8182:10;8174:52;8182:10;;;8174:52;:::i;:::-;8254:22;431:9788;;;8244:32;;;;431:9788;;8384:32;;8490:6;8384:32;;;431:9788;8384:32;;-1:-1:-1;;;;;;;;;;;8384:32:7;431:9788;8384:32;;:::i;:::-;431:9788;;8490:6;:::i;:::-;431:9788;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;8521:58;431:9788;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;431:9788:7;;9143:28;;431:9788;;;;;;;9221:28;431:9788;;;9221:28;431:9788;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;949:26;431:9788;;;-1:-1:-1;;;;;431:9788:7;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;1500:62:0;;;:::i;:::-;8839:3:7;8822:20;;431:9788;;;;8877:34;431:9788;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;3459:5:2;431:9788:7;;:::i;:::-;;;735:10:6;;3459:5:2;:::i;:::-;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;-1:-1:-1;;;;431:9788:7;;;;;;;;-1:-1:-1;431:9788:7;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:6:0;431:9788:7;;;-1:-1:-1;;;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;837:38;431:9788;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;1166:5:4;431:9788:7;;:::i;:::-;;;735:10:6;1135:5:4;735:10:6;;1135:5:4;;:::i;:::-;1166;:::i;:::-;431:9788:7;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;431:9788:7;;-1:-1:-1;;;;;;431:9788:7;;;;;;;-1:-1:-1;;;;;431:9788:7;3052:40:0;431:9788:7;;3052:40:0;431:9788:7;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;;;-1:-1:-1;;;;;431:9788:7;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;;;:::i;:::-;431:9788:7;;;6916:13;431:9788;;;;;;6950:49;431:9788;;;;6950:49;:::i;:::-;7009:55;431:9788;7017:19;;;431:9788;;7009:55;:::i;:::-;-1:-1:-1;;;;;431:9788:7;;;7082:25;;431:9788;;7165:10;;7157:52;7165:10;;;7157:52;:::i;:::-;7237:19;431:9788;;;7227:29;;;;431:9788;;7358:29;;7468:6;7358:29;;;431:9788;7358:29;;-1:-1:-1;;;;;;;;;;;7358:29:7;431:9788;7358:29;;:::i;7468:6::-;431:9788;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;7499:58;431:9788;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;692:5:4;431:9788:7;;735:10:6;692:5:4;:::i;431:9788:7:-;;;;;;;;;;;;;;;;;703:18;431:9788;;;;;;;;;;;;;;;;;;;;2780:2:2;431:9788:7;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;431:9788:7;;;4796:13;431:9788;;;;;;4830:49;431:9788;;;;4830:49;:::i;:::-;-1:-1:-1;;;;;431:9788:7;;;;;4897:21;;431:9788;;4972:19;;;431:9788;;;;;;;5095:21;;431:9788;5095:21;;;431:9788;5095:21;;;;;;;431:9788;;;5095:21;;:::i;:::-;5191:22;;431:9788;5178:11;431:9788;;5191:22;;431:9788;;;5191:22;;:::i;:::-;431:9788;;;;;;;;;;;;;;;;;;;;4972:19;431:9788;;;;-1:-1:-1;;;431:9788:7;;;;-1:-1:-1;;;;;;;;;;;5322:71:7;;;;5178:11;431:9788;;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;5408:77;431:9788;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;4986:5:2;431:9788:7;;:::i;:::-;;;:::i;:::-;;;735:10:6;4950:5:2;735:10:6;;4950:5:2;;:::i;:::-;4986;:::i;431:9788:7:-;;;;;;;;;;;;;;;;10198:12;431:9788;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:6;;9813:19:2;9809:89;;-1:-1:-1;;;;;431:9788:7;;9911:21:2;;9907:90;;735:10:6;;;431:9788:7;735:10:6;;431:9788:7;;;;;;;;;;;;;;;;;;;;10085:31:2;735:10:6;;10085:31:2;;431:9788:7;;;;;9907:90:2;431:9788:7;;-1:-1:-1;;;9955:31:2;;;;;431:9788:7;;;;;9955:31:2;9809:89;431:9788:7;;-1:-1:-1;;;9855:32:2;;;;;431:9788:7;;;;;9855:32:2;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;-1:-1:-1;431:9788:7;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;;:::i;:::-;431:9788:7;;;;;2901:13;431:9788;;;;;;;;;;2985:15;;431:9788;;3239:5;3139:33;;:66;:33;:48;:33;;;;;:::i;:::-;:48;:::i;:66::-;3223:21;431:9788;;703:18;3374:26;431:9788;3374:12;431:9788;3374:26;:::i;:::-;:40;431:9788;;3762:29;3545:28;3691:26;3545:28;3619:30;3545:28;;;;;;:::i;:::-;431:9788;3619:30;;;:::i;:::-;431:9788;3691:26;;;:::i;:::-;431:9788;3762:29;;;:::i;:::-;431:9788;;3879:32;3893:18;431:9788;3879:32;;:::i;:::-;431:9788;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4447:43;431:9788;;2901:13;431:9788;;;;;;;;;;;;;;;;4002:334;;;431:9788;;;4002:334;;;431:9788;;;;4002:334;;431:9788;;;;4002:334;;431:9788;;;;4002:334;;431:9788;;;;4002:334;;431:9788;;;4002:334;431:9788;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4396:27;431:9788;3374:12;431:9788;4396:27;:::i;:::-;3374:12;431:9788;;;;;4447:43;431:9788;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;;;:::i;:::-;431:9788:7;;;5873:13;431:9788;;;;;;5907:49;431:9788;;;;5907:49;:::i;:::-;5966:55;431:9788;5974:19;;;431:9788;;5966:55;:::i;:::-;-1:-1:-1;;;;;431:9788:7;;;6039:23;;431:9788;;6189:23;6117:10;6109:52;6117:10;;;6109:52;:::i;:::-;6189:23;431:9788;;;6179:33;;;;431:9788;;6322:33;;6431:6;6322:33;;;431:9788;6322:33;;-1:-1:-1;;;;;;;;;;;6322:33:7;431:9788;6322:33;;:::i;6431:6::-;431:9788;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;6462:60;431:9788;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;431:9788:7;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;431:9788:7;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;431:9788:7;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;1796:162:0;1710:6;431:9788:7;-1:-1:-1;;;;;431:9788:7;735:10:6;1855:23:0;1851:101;;1796:162::o;1851:101::-;431:9788:7;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;431:9788:7;;;1901:40:0;431:9788:7;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;5393:300:2;;-1:-1:-1;;;;;431:9788:7;;;;5476:18:2;;5472:86;;431:9788:7;5571:16:2;;;5567:86;;6093:540;431:9788:7;;;;;;;;;;;6340:19:2;;;;6336:115;;431:9788:7;;;;;7083:25:2;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:2;5393:300::o;6336:115::-;431:9788:7;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;431:9788:7;;;;6386:50:2;;;431:9788:7;;;;;;;;;;;;;;;;6386:50:2;5567:86;431:9788:7;;-1:-1:-1;;;5610:32:2;;5492:1;5610:32;;;431:9788:7;;;5610:32:2;5472:86;431:9788:7;;-1:-1:-1;;;5517:30:2;;5492:1;5517:30;;;431:9788:7;;;5517:30:2;431:9788:7;;;;;;;;;;:::o;:::-;;;;;;;;;;;;10415:476:2;;431:9788:7;;;;;;;;-1:-1:-1;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;10599:17:2;;;10580:36;;10576:309;;10415:476;;;;;;;;:::o;10576:309::-;10636:24;;;10632:130;;9813:19;;;9809:89;;9911:21;;9907:90;;431:9788:7;;;;;;;;;;;;;;;;;10576:309:2;;;;;;;;;9907:90;431:9788:7;;-1:-1:-1;;;9955:31:2;;;;;431:9788:7;;;;;9955:31:2;9809:89;431:9788:7;;-1:-1:-1;;;9855:32:2;;;;;431:9788:7;;;;;9855:32:2;10632:130;431:9788:7;;-1:-1:-1;;;10687:60:2;;-1:-1:-1;;;;;431:9788:7;;;;10687:60:2;;;431:9788:7;;;;;;;;;;;;;;;6386:50:2;7984:206;;-1:-1:-1;;;;;431:9788:7;;;8054:21:2;;8050:89;;6093:540;431:9788:7;;;;;;;;;;;6340:19:2;;;;6336:115;;431:9788:7;;7083:25:2;431:9788:7;;;;;;;;;;;;;;;6810:21:2;431:9788:7;;6810:21:2;431:9788:7;;;;;;7083:25:2;7984:206::o;6336:115::-;431:9788:7;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;431:9788:7;;;;6386:50:2;;;431:9788:7;;;;;;;;;;;;;;;;6386:50:2;431:9788:7;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;-1:-1:-1;;;431:9788:7;;;;;;;7458:208:2;-1:-1:-1;;;;;431:9788:7;;7528:21:2;;7524:91;;7083:25;431:9788:7;;6233:21:2;6643:425;431:9788:7;6233:21:2;431:9788:7;6233:21:2;:::i;:::-;;431:9788:7;;;;;;;;;;;;;;;;;;;;;7083:25:2;7458:208::o;431:9788:7:-;;;;:::o;:::-;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;431:9788:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9553:485::-;-1:-1:-1;431:9788:7;9685:13;431:9788;;;;-1:-1:-1;431:9788:7;;9719:49;431:9788;;;;9719:49;:::i;:::-;431:9788;9799:1;9791:9;;9787:43;;9852:1;9844:9;;9840:45;;9907:1;9899:9;;9895:41;;9958:1;9950:9;9946:44;;431:9788;;-1:-1:-1;;;10009:22:7;;431:9788;9958:1;10009:22;;431:9788;;;;;;-1:-1:-1;;;431:9788:7;;;;;;10009:22;9946:44;9968:22;;431:9788;9961:29;:::o;9895:41::-;9917:19;;;431:9788;9910:26;:::o;9840:45::-;9862:23;;;431:9788;9855:30;:::o;9787:43::-;9809:21;;;431:9788;9802:28;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title ProVibeToken\n * @dev ERC20 token for the ProVibeCoder platform\n * This token represents equity in projects and can be distributed to\n * contributors based on their work.\n */\ncontract ProVibeToken is ERC20, ERC20Burnable, Ownable {\n    // Token metadata\n    string private _name = \"ProVibe Token\";\n    string private _symbol = \"PVT\";\n    \n    // Maximum tokens that can ever be minted (100 million tokens)\n    uint256 public constant MAX_SUPPLY = 100000000 * 10**18;\n    \n    // Current total supply\n    uint256 private _totalSupply;\n    \n    // Platform fee percentage (0.5%)\n    uint256 public platformFeePercent = 50; // Out of 10000 (0.5%)\n    \n    // Address to receive platform fees\n    address public feeReceiver;\n    \n    // Mapping of project IDs to their token information\n    mapping(bytes32 => ProjectToken) public projectTokens;\n    \n    // Structure to hold project token information\n    struct ProjectToken {\n        bool exists;\n        uint256 totalTokens;\n        uint256 founderTokens;\n        uint256 developerTokens;\n        uint256 legalTokens;\n        uint256 investorTokens;\n        uint256 platformTokens;\n        bool initialized;\n    }\n    \n    // Events\n    event ProjectTokenCreated(bytes32 indexed projectId, uint256 totalTokens);\n    event EquityDistributed(bytes32 indexed projectId, address indexed recipient, uint256 amount, string role);\n    \n    /**\n     * @dev Constructor - initializes the token\n     * @param initialOwner The initial owner of the contract\n     * @param _feeReceiver The address to receive platform fees\n     */\n    constructor(address initialOwner, address _feeReceiver) ERC20(_name, _symbol) Ownable(initialOwner) {\n        require(_feeReceiver != address(0), \"Fee receiver cannot be zero address\");\n        feeReceiver = _feeReceiver;\n    }\n    \n    /**\n     * @dev Creates tokens for a new project\n     * @param projectId Unique identifier for the project\n     * @param totalTokens Total number of tokens to allocate for this project\n     * @param founderPercent Percentage of tokens allocated to the founder (in basis points, 1% = 100)\n     * @param developerPercent Percentage of tokens allocated to developers (in basis points)\n     * @param legalPercent Percentage of tokens allocated to legal experts (in basis points)\n     * @param investorPercent Percentage of tokens allocated to investors (in basis points)\n     */\n    function createProjectTokens(\n        bytes32 projectId,\n        uint256 totalTokens,\n        uint256 founderPercent,\n        uint256 developerPercent,\n        uint256 legalPercent,\n        uint256 investorPercent\n    ) external onlyOwner {\n        require(!projectTokens[projectId].exists, \"Project tokens already created\");\n        require(totalTokens > 0, \"Total tokens must be greater than 0\");\n        \n        // Check that percentages add up to 10000 (100%)\n        uint256 totalPercent = founderPercent + developerPercent + legalPercent + investorPercent;\n        require(totalPercent == 10000, \"Percentages must add up to 100%\");\n        \n        // Check that minting these tokens won't exceed max supply\n        require(_totalSupply + totalTokens <= MAX_SUPPLY, \"Would exceed maximum token supply\");\n        \n        // Calculate token amounts for each role\n        uint256 founderTokens = (totalTokens * founderPercent) / 10000;\n        uint256 developerTokens = (totalTokens * developerPercent) / 10000;\n        uint256 legalTokens = (totalTokens * legalPercent) / 10000;\n        uint256 investorTokens = (totalTokens * investorPercent) / 10000;\n        \n        // Calculate platform fee\n        uint256 platformTokens = (totalTokens * platformFeePercent) / 10000;\n        \n        // Store project token info\n        projectTokens[projectId] = ProjectToken({\n            exists: true,\n            totalTokens: totalTokens,\n            founderTokens: founderTokens,\n            developerTokens: developerTokens,\n            legalTokens: legalTokens,\n            investorTokens: investorTokens,\n            platformTokens: platformTokens,\n            initialized: false\n        });\n        \n        // Increase total supply counter\n        _totalSupply += totalTokens;\n        \n        emit ProjectTokenCreated(projectId, totalTokens);\n    }\n    \n    /**\n     * @dev Distributes founder equity for a project\n     * @param projectId The project identifier\n     * @param founder The founder's address\n     */\n    function distributeFounderEquity(bytes32 projectId, address founder) external onlyOwner {\n        ProjectToken storage project = projectTokens[projectId];\n        require(project.exists, \"Project does not exist\");\n        require(founder != address(0), \"Founder address cannot be zero\");\n        require(!project.initialized, \"Project already initialized\");\n        \n        // Mint tokens to the founder\n        _mint(founder, project.founderTokens);\n        \n        // Mint platform fee tokens\n        _mint(feeReceiver, project.platformTokens);\n        \n        // Mark project as initialized\n        project.initialized = true;\n        \n        emit EquityDistributed(projectId, founder, project.founderTokens, \"founder\");\n        emit EquityDistributed(projectId, feeReceiver, project.platformTokens, \"platform\");\n    }\n    \n    /**\n     * @dev Distributes developer equity for a project\n     * @param projectId The project identifier\n     * @param developer The developer's address\n     * @param amount The amount of tokens to distribute\n     */\n    function distributeDeveloperEquity(bytes32 projectId, address developer, uint256 amount) external onlyOwner {\n        ProjectToken storage project = projectTokens[projectId];\n        require(project.exists, \"Project does not exist\");\n        require(project.initialized, \"Project not initialized\");\n        require(developer != address(0), \"Developer address cannot be zero\");\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(amount <= project.developerTokens, \"Amount exceeds available developer tokens\");\n        \n        // Reduce available developer tokens\n        project.developerTokens -= amount;\n        \n        // Mint tokens to the developer\n        _mint(developer, amount);\n        \n        emit EquityDistributed(projectId, developer, amount, \"developer\");\n    }\n    \n    /**\n     * @dev Distributes legal expert equity for a project\n     * @param projectId The project identifier\n     * @param legalExpert The legal expert's address\n     * @param amount The amount of tokens to distribute\n     */\n    function distributeLegalEquity(bytes32 projectId, address legalExpert, uint256 amount) external onlyOwner {\n        ProjectToken storage project = projectTokens[projectId];\n        require(project.exists, \"Project does not exist\");\n        require(project.initialized, \"Project not initialized\");\n        require(legalExpert != address(0), \"Legal expert address cannot be zero\");\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(amount <= project.legalTokens, \"Amount exceeds available legal tokens\");\n        \n        // Reduce available legal tokens\n        project.legalTokens -= amount;\n        \n        // Mint tokens to the legal expert\n        _mint(legalExpert, amount);\n        \n        emit EquityDistributed(projectId, legalExpert, amount, \"legal\");\n    }\n    \n    /**\n     * @dev Distributes investor equity for a project\n     * @param projectId The project identifier\n     * @param investor The investor's address\n     * @param amount The amount of tokens to distribute\n     */\n    function distributeInvestorEquity(bytes32 projectId, address investor, uint256 amount) external onlyOwner {\n        ProjectToken storage project = projectTokens[projectId];\n        require(project.exists, \"Project does not exist\");\n        require(project.initialized, \"Project not initialized\");\n        require(investor != address(0), \"Investor address cannot be zero\");\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(amount <= project.investorTokens, \"Amount exceeds available investor tokens\");\n        \n        // Reduce available investor tokens\n        project.investorTokens -= amount;\n        \n        // Mint tokens to the investor\n        _mint(investor, amount);\n        \n        emit EquityDistributed(projectId, investor, amount, \"investor\");\n    }\n    \n    /**\n     * @dev Updates the platform fee percentage\n     * @param newFeePercent New fee percentage (in basis points, 1% = 100)\n     */\n    function updatePlatformFee(uint256 newFeePercent) external onlyOwner {\n        require(newFeePercent <= 500, \"Fee cannot exceed 5%\");\n        platformFeePercent = newFeePercent;\n    }\n    \n    /**\n     * @dev Updates the fee receiver address\n     * @param newFeeReceiver New address to receive platform fees\n     */\n    function updateFeeReceiver(address newFeeReceiver) external onlyOwner {\n        require(newFeeReceiver != address(0), \"Fee receiver cannot be zero address\");\n        feeReceiver = newFeeReceiver;\n    }\n    \n    /**\n     * @dev Gets the remaining available tokens for a specific role in a project\n     * @param projectId The project identifier\n     * @param role The role (1=founder, 2=developer, 3=legal, 4=investor)\n     * @return The amount of tokens available for the specified role\n     */\n    function getAvailableTokens(bytes32 projectId, uint8 role) external view returns (uint256) {\n        ProjectToken storage project = projectTokens[projectId];\n        require(project.exists, \"Project does not exist\");\n        \n        if (role == 1) return project.founderTokens;\n        if (role == 2) return project.developerTokens;\n        if (role == 3) return project.legalTokens;\n        if (role == 4) return project.investorTokens;\n        \n        revert(\"Invalid role\");\n    }\n    \n    /**\n     * @dev Returns the current total supply of tokens\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n}",
  "sourcePath": "/Users/chimwopara/Documents/Coding/html/provibecoder/frontend/contracts/ethereum-contracts/contracts/ProVibeToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/ProVibeToken.sol",
    "exportedSymbols": {
      "Context": [
        979
      ],
      "ERC20": [
        799
      ],
      "ERC20Burnable": [
        923
      ],
      "IERC20": [
        877
      ],
      "IERC20Errors": [
        189
      ],
      "IERC20Metadata": [
        949
      ],
      "Ownable": [
        147
      ],
      "ProVibeToken": [
        1619
      ]
    },
    "id": 1620,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 981,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 982,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1620,
        "sourceUnit": 800,
        "src": "58:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1620,
        "sourceUnit": 924,
        "src": "114:74:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 984,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1620,
        "sourceUnit": 148,
        "src": "189:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 986,
              "name": "ERC20",
              "nameLocations": [
                "456:5:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 799,
              "src": "456:5:7"
            },
            "id": 987,
            "nodeType": "InheritanceSpecifier",
            "src": "456:5:7"
          },
          {
            "baseName": {
              "id": 988,
              "name": "ERC20Burnable",
              "nameLocations": [
                "463:13:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 923,
              "src": "463:13:7"
            },
            "id": 989,
            "nodeType": "InheritanceSpecifier",
            "src": "463:13:7"
          },
          {
            "baseName": {
              "id": 990,
              "name": "Ownable",
              "nameLocations": [
                "478:7:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "478:7:7"
            },
            "id": 991,
            "nodeType": "InheritanceSpecifier",
            "src": "478:7:7"
          }
        ],
        "canonicalName": "ProVibeToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 985,
          "nodeType": "StructuredDocumentation",
          "src": "243:187:7",
          "text": " @title ProVibeToken\n @dev ERC20 token for the ProVibeCoder platform\n This token represents equity in projects and can be distributed to\n contributors based on their work."
        },
        "fullyImplemented": true,
        "id": 1619,
        "linearizedBaseContracts": [
          1619,
          147,
          923,
          799,
          189,
          949,
          877,
          979
        ],
        "name": "ProVibeToken",
        "nameLocation": "440:12:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 994,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "529:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1619,
            "src": "514:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 992,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "514:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "50726f5669626520546f6b656e",
              "id": 993,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "537:15:7",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_037c878cee40d4f4be4c4b322d3441f1ce41541e87d30a5236aa60bc663c2225",
                "typeString": "literal_string \"ProVibe Token\""
              },
              "value": "ProVibe Token"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 997,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "573:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1619,
            "src": "558:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 995,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "558:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "505654",
              "id": 996,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "583:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_9347bd3fcdac1179219db0fada3e65a30a861be2c27bdd69c22abe1171a410ff",
                "typeString": "literal_string \"PVT\""
              },
              "value": "PVT"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 1004,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "690:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1619,
            "src": "666:55:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 998,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000000"
              },
              "id": 1003,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030303030303030",
                "id": 999,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "703:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000_by_1",
                  "typeString": "int_const 100000000"
                },
                "value": "100000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 1002,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 1000,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "715:2:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 1001,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "719:2:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "715:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "703:18:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1006,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "776:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1619,
            "src": "760:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1005,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "760:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8c639a85",
            "id": 1009,
            "mutability": "mutable",
            "name": "platformFeePercent",
            "nameLocation": "852:18:7",
            "nodeType": "VariableDeclaration",
            "scope": 1619,
            "src": "837:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1007,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "837:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 1008,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "873:2:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b3f00674",
            "id": 1011,
            "mutability": "mutable",
            "name": "feeReceiver",
            "nameLocation": "964:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1619,
            "src": "949:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1010,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "949:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d2fd7625",
            "id": 1016,
            "mutability": "mutable",
            "name": "projectTokens",
            "nameLocation": "1083:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1619,
            "src": "1043:53:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProjectToken_$1033_storage_$",
              "typeString": "mapping(bytes32 => struct ProVibeToken.ProjectToken)"
            },
            "typeName": {
              "id": 1015,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1012,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1051:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1043:32:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProjectToken_$1033_storage_$",
                "typeString": "mapping(bytes32 => struct ProVibeToken.ProjectToken)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1014,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1013,
                  "name": "ProjectToken",
                  "nameLocations": [
                    "1062:12:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1033,
                  "src": "1062:12:7"
                },
                "referencedDeclaration": 1033,
                "src": "1062:12:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                  "typeString": "struct ProVibeToken.ProjectToken"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ProVibeToken.ProjectToken",
            "id": 1033,
            "members": [
              {
                "constant": false,
                "id": 1018,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "1193:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1033,
                "src": "1188:11:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1017,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1020,
                "mutability": "mutable",
                "name": "totalTokens",
                "nameLocation": "1217:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1033,
                "src": "1209:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1019,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1209:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1022,
                "mutability": "mutable",
                "name": "founderTokens",
                "nameLocation": "1246:13:7",
                "nodeType": "VariableDeclaration",
                "scope": 1033,
                "src": "1238:21:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1021,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1238:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1024,
                "mutability": "mutable",
                "name": "developerTokens",
                "nameLocation": "1277:15:7",
                "nodeType": "VariableDeclaration",
                "scope": 1033,
                "src": "1269:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1023,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1269:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1026,
                "mutability": "mutable",
                "name": "legalTokens",
                "nameLocation": "1310:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1033,
                "src": "1302:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1025,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1302:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1028,
                "mutability": "mutable",
                "name": "investorTokens",
                "nameLocation": "1339:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 1033,
                "src": "1331:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1027,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1331:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1030,
                "mutability": "mutable",
                "name": "platformTokens",
                "nameLocation": "1371:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 1033,
                "src": "1363:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1029,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1363:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1032,
                "mutability": "mutable",
                "name": "initialized",
                "nameLocation": "1400:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1033,
                "src": "1395:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1031,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1395:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProjectToken",
            "nameLocation": "1165:12:7",
            "nodeType": "StructDefinition",
            "scope": 1619,
            "src": "1158:260:7",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "44effbddf56fcfa4173159bd8b4fe3dcb546589ec21115e7236e3adfe128f588",
            "id": 1039,
            "name": "ProjectTokenCreated",
            "nameLocation": "1448:19:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1035,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "1484:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "1468:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1037,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalTokens",
                  "nameLocation": "1503:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "1495:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1495:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1467:48:7"
            },
            "src": "1442:74:7"
          },
          {
            "anonymous": false,
            "eventSelector": "1b906fa70dc75749576366c26fdcc5e2e28261ecb888ed362ffbd7222ec3de6c",
            "id": 1049,
            "name": "EquityDistributed",
            "nameLocation": "1527:17:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "1561:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1049,
                  "src": "1545:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1588:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1049,
                  "src": "1572:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1607:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1049,
                  "src": "1599:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "1622:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1049,
                  "src": "1615:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1544:83:7"
            },
            "src": "1521:107:7"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "1927:127:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1065,
                          "name": "_feeReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1054,
                          "src": "1945:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1969:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1961:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1066,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1961:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1961:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1945:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4665652072656365697665722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1973:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94b3f061c7373fea396995302e7e4b7fbac2dcfa126de20e682c32eca8160c62",
                          "typeString": "literal_string \"Fee receiver cannot be zero address\""
                        },
                        "value": "Fee receiver cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94b3f061c7373fea396995302e7e4b7fbac2dcfa126de20e682c32eca8160c62",
                          "typeString": "literal_string \"Fee receiver cannot be zero address\""
                        }
                      ],
                      "id": 1064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1937:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:74:7"
                },
                {
                  "expression": {
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1074,
                      "name": "feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "2021:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1075,
                      "name": "_feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1054,
                      "src": "2035:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2021:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:26:7"
                }
              ]
            },
            "documentation": {
              "id": 1050,
              "nodeType": "StructuredDocumentation",
              "src": "1638:184:7",
              "text": " @dev Constructor - initializes the token\n @param initialOwner The initial owner of the contract\n @param _feeReceiver The address to receive platform fees"
            },
            "id": 1079,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1057,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 994,
                    "src": "1889:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  {
                    "id": 1058,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 997,
                    "src": "1896:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  }
                ],
                "id": 1059,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1056,
                  "name": "ERC20",
                  "nameLocations": [
                    "1883:5:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "1883:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1883:21:7"
              },
              {
                "arguments": [
                  {
                    "id": 1061,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1052,
                    "src": "1913:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1062,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1060,
                  "name": "Ownable",
                  "nameLocations": [
                    "1905:7:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "1905:7:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1905:21:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1052,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1847:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "1839:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1054,
                  "mutability": "mutable",
                  "name": "_feeReceiver",
                  "nameLocation": "1869:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "1861:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1861:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1838:44:7"
            },
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1927:0:7"
            },
            "scope": 1619,
            "src": "1827:227:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1208,
              "nodeType": "Block",
              "src": "2882:1615:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2900:32:7",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1098,
                              "name": "projectTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1016,
                              "src": "2901:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProjectToken_$1033_storage_$",
                                "typeString": "mapping(bytes32 => struct ProVibeToken.ProjectToken storage ref)"
                              }
                            },
                            "id": 1100,
                            "indexExpression": {
                              "id": 1099,
                              "name": "projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1082,
                              "src": "2915:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2901:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectToken_$1033_storage",
                              "typeString": "struct ProVibeToken.ProjectToken storage ref"
                            }
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2926:6:7",
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1018,
                          "src": "2901:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a65637420746f6b656e7320616c72656164792063726561746564",
                        "id": 1103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2934:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9dcc450ce5f31266723de1f6e7b33971565bf9c33a11fbab6b35acb4d0bc5ab",
                          "typeString": "literal_string \"Project tokens already created\""
                        },
                        "value": "Project tokens already created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9dcc450ce5f31266723de1f6e7b33971565bf9c33a11fbab6b35acb4d0bc5ab",
                          "typeString": "literal_string \"Project tokens already created\""
                        }
                      ],
                      "id": 1097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2892:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2892:75:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1105,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:75:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1107,
                          "name": "totalTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "2985:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2999:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2985:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f74616c20746f6b656e73206d7573742062652067726561746572207468616e2030",
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3002:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be3cfc4c5e4c74437f5b62c76a583a6a8dabc581df36c3750099056c0a37495b",
                          "typeString": "literal_string \"Total tokens must be greater than 0\""
                        },
                        "value": "Total tokens must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be3cfc4c5e4c74437f5b62c76a583a6a8dabc581df36c3750099056c0a37495b",
                          "typeString": "literal_string \"Total tokens must be greater than 0\""
                        }
                      ],
                      "id": 1106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2977:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:63:7"
                },
                {
                  "assignments": [
                    1114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1114,
                      "mutability": "mutable",
                      "name": "totalPercent",
                      "nameLocation": "3124:12:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "3116:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1113,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3116:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1122,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1115,
                          "name": "founderPercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1086,
                          "src": "3139:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1116,
                          "name": "developerPercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1088,
                          "src": "3156:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3139:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1118,
                        "name": "legalPercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1090,
                        "src": "3175:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3139:48:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1120,
                      "name": "investorPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1092,
                      "src": "3190:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3139:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3116:89:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1124,
                          "name": "totalPercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1114,
                          "src": "3223:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3239:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "3223:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50657263656e7461676573206d7573742061646420757020746f2031303025",
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3246:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cfbce791e4248ae5067400f1bade1e00321cc08308fd398851c98df080bbfd45",
                          "typeString": "literal_string \"Percentages must add up to 100%\""
                        },
                        "value": "Percentages must add up to 100%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cfbce791e4248ae5067400f1bade1e00321cc08308fd398851c98df080bbfd45",
                          "typeString": "literal_string \"Percentages must add up to 100%\""
                        }
                      ],
                      "id": 1123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3215:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3215:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "3215:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1131,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "3374:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1132,
                            "name": "totalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "3389:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3374:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1134,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "3404:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3374:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576f756c6420657863656564206d6178696d756d20746f6b656e20737570706c79",
                        "id": 1136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3416:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af18838bc3d1d21f2e1e2b2df860e9dbde2710d495e749dedbb1f7f92cf68066",
                          "typeString": "literal_string \"Would exceed maximum token supply\""
                        },
                        "value": "Would exceed maximum token supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af18838bc3d1d21f2e1e2b2df860e9dbde2710d495e749dedbb1f7f92cf68066",
                          "typeString": "literal_string \"Would exceed maximum token supply\""
                        }
                      ],
                      "id": 1130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3366:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3366:86:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1138,
                  "nodeType": "ExpressionStatement",
                  "src": "3366:86:7"
                },
                {
                  "assignments": [
                    1140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1140,
                      "mutability": "mutable",
                      "name": "founderTokens",
                      "nameLocation": "3528:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "3520:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1139,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3520:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1147,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1141,
                            "name": "totalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "3545:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1142,
                            "name": "founderPercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "3559:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3545:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1144,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3544:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3577:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "3544:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3520:62:7"
                },
                {
                  "assignments": [
                    1149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1149,
                      "mutability": "mutable",
                      "name": "developerTokens",
                      "nameLocation": "3600:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "3592:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1148,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3592:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1156,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1150,
                            "name": "totalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "3619:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1151,
                            "name": "developerPercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1088,
                            "src": "3633:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3619:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1153,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3618:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3653:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "3618:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3592:66:7"
                },
                {
                  "assignments": [
                    1158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1158,
                      "mutability": "mutable",
                      "name": "legalTokens",
                      "nameLocation": "3676:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "3668:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3668:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1165,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1159,
                            "name": "totalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "3691:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1160,
                            "name": "legalPercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "3705:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3691:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1162,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3690:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3721:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "3690:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3668:58:7"
                },
                {
                  "assignments": [
                    1167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1167,
                      "mutability": "mutable",
                      "name": "investorTokens",
                      "nameLocation": "3744:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "3736:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1166,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3736:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1174,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1168,
                            "name": "totalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "3762:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1169,
                            "name": "investorPercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1092,
                            "src": "3776:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3762:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1171,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3761:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3795:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "3761:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3736:64:7"
                },
                {
                  "assignments": [
                    1176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1176,
                      "mutability": "mutable",
                      "name": "platformTokens",
                      "nameLocation": "3861:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "3853:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1175,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3853:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1183,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1177,
                            "name": "totalTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1084,
                            "src": "3879:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1178,
                            "name": "platformFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "3893:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3879:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1180,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3878:34:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3915:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "3878:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3853:67:7"
                },
                {
                  "expression": {
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1184,
                        "name": "projectTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "3975:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProjectToken_$1033_storage_$",
                          "typeString": "mapping(bytes32 => struct ProVibeToken.ProjectToken storage ref)"
                        }
                      },
                      "id": 1186,
                      "indexExpression": {
                        "id": 1185,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1082,
                        "src": "3989:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3975:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectToken_$1033_storage",
                        "typeString": "struct ProVibeToken.ProjectToken storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4037:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 1189,
                          "name": "totalTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "4068:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1190,
                          "name": "founderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "4108:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1191,
                          "name": "developerTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1149,
                          "src": "4152:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1192,
                          "name": "legalTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1158,
                          "src": "4194:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1193,
                          "name": "investorTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1167,
                          "src": "4235:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1194,
                          "name": "platformTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1176,
                          "src": "4279:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4320:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1187,
                        "name": "ProjectToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "4002:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProjectToken_$1033_storage_ptr_$",
                          "typeString": "type(struct ProVibeToken.ProjectToken storage pointer)"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4029:6:7",
                        "4055:11:7",
                        "4093:13:7",
                        "4135:15:7",
                        "4181:11:7",
                        "4219:14:7",
                        "4263:14:7",
                        "4307:11:7"
                      ],
                      "names": [
                        "exists",
                        "totalTokens",
                        "founderTokens",
                        "developerTokens",
                        "legalTokens",
                        "investorTokens",
                        "platformTokens",
                        "initialized"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4002:334:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectToken_$1033_memory_ptr",
                        "typeString": "struct ProVibeToken.ProjectToken memory"
                      }
                    },
                    "src": "3975:361:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectToken_$1033_storage",
                      "typeString": "struct ProVibeToken.ProjectToken storage ref"
                    }
                  },
                  "id": 1198,
                  "nodeType": "ExpressionStatement",
                  "src": "3975:361:7"
                },
                {
                  "expression": {
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1199,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "4396:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1200,
                      "name": "totalTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "4412:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4396:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1202,
                  "nodeType": "ExpressionStatement",
                  "src": "4396:27:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1204,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1082,
                        "src": "4467:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1205,
                        "name": "totalTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1084,
                        "src": "4478:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1203,
                      "name": "ProjectTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "4447:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "EmitStatement",
                  "src": "4442:48:7"
                }
              ]
            },
            "documentation": {
              "id": 1080,
              "nodeType": "StructuredDocumentation",
              "src": "2064:574:7",
              "text": " @dev Creates tokens for a new project\n @param projectId Unique identifier for the project\n @param totalTokens Total number of tokens to allocate for this project\n @param founderPercent Percentage of tokens allocated to the founder (in basis points, 1% = 100)\n @param developerPercent Percentage of tokens allocated to developers (in basis points)\n @param legalPercent Percentage of tokens allocated to legal experts (in basis points)\n @param investorPercent Percentage of tokens allocated to investors (in basis points)"
            },
            "functionSelector": "06a788ea",
            "id": 1209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1095,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1094,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2872:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "2872:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2872:9:7"
              }
            ],
            "name": "createProjectTokens",
            "nameLocation": "2652:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "2689:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "2681:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "totalTokens",
                  "nameLocation": "2716:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "2708:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2708:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "founderPercent",
                  "nameLocation": "2745:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "2737:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1088,
                  "mutability": "mutable",
                  "name": "developerPercent",
                  "nameLocation": "2777:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "2769:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2769:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "legalPercent",
                  "nameLocation": "2811:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "2803:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2803:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "investorPercent",
                  "nameLocation": "2841:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "2833:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2833:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2671:191:7"
            },
            "returnParameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2882:0:7"
            },
            "scope": 1619,
            "src": "2643:1854:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1283,
              "nodeType": "Block",
              "src": "4755:737:7",
              "statements": [
                {
                  "assignments": [
                    1221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1221,
                      "mutability": "mutable",
                      "name": "project",
                      "nameLocation": "4786:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1283,
                      "src": "4765:28:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                        "typeString": "struct ProVibeToken.ProjectToken"
                      },
                      "typeName": {
                        "id": 1220,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1219,
                          "name": "ProjectToken",
                          "nameLocations": [
                            "4765:12:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1033,
                          "src": "4765:12:7"
                        },
                        "referencedDeclaration": 1033,
                        "src": "4765:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1225,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1222,
                      "name": "projectTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "4796:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProjectToken_$1033_storage_$",
                        "typeString": "mapping(bytes32 => struct ProVibeToken.ProjectToken storage ref)"
                      }
                    },
                    "id": 1224,
                    "indexExpression": {
                      "id": 1223,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1212,
                      "src": "4810:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4796:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectToken_$1033_storage",
                      "typeString": "struct ProVibeToken.ProjectToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4765:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1227,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1221,
                          "src": "4838:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4846:6:7",
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1018,
                        "src": "4838:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a65637420646f6573206e6f74206578697374",
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4854:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        },
                        "value": "Project does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        }
                      ],
                      "id": 1226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4830:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4830:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "4830:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1233,
                          "name": "founder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "4897:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4916:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4908:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1234,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4908:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4908:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4897:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466f756e64657220616464726573732063616e6e6f74206265207a65726f",
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4920:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79fc56bedb778654a8c7b81425c7219e3b2cfb1c2cd468fdb827c77df48453e9",
                          "typeString": "literal_string \"Founder address cannot be zero\""
                        },
                        "value": "Founder address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79fc56bedb778654a8c7b81425c7219e3b2cfb1c2cd468fdb827c77df48453e9",
                          "typeString": "literal_string \"Founder address cannot be zero\""
                        }
                      ],
                      "id": 1232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4889:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4889:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "4889:64:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4971:20:7",
                        "subExpression": {
                          "expression": {
                            "id": 1243,
                            "name": "project",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1221,
                            "src": "4972:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                              "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                            }
                          },
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4980:11:7",
                          "memberName": "initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1032,
                          "src": "4972:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a65637420616c726561647920696e697469616c697a6564",
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4993:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4268aeb82e5f02da3424c043cc6f15e97141340b50fa55c6fcf02ae3210e2287",
                          "typeString": "literal_string \"Project already initialized\""
                        },
                        "value": "Project already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4268aeb82e5f02da3424c043cc6f15e97141340b50fa55c6fcf02ae3210e2287",
                          "typeString": "literal_string \"Project already initialized\""
                        }
                      ],
                      "id": 1242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4963:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4963:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1248,
                  "nodeType": "ExpressionStatement",
                  "src": "4963:60:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1250,
                        "name": "founder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "5086:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1251,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1221,
                          "src": "5095:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5103:13:7",
                        "memberName": "founderTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1022,
                        "src": "5095:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1249,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "5080:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5080:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1254,
                  "nodeType": "ExpressionStatement",
                  "src": "5080:37:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1256,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "5178:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1257,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1221,
                          "src": "5191:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5199:14:7",
                        "memberName": "platformTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1030,
                        "src": "5191:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1255,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "5172:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5172:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1260,
                  "nodeType": "ExpressionStatement",
                  "src": "5172:42:7"
                },
                {
                  "expression": {
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1261,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1221,
                        "src": "5272:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                        }
                      },
                      "id": 1263,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5280:11:7",
                      "memberName": "initialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1032,
                      "src": "5272:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5294:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5272:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1266,
                  "nodeType": "ExpressionStatement",
                  "src": "5272:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1268,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "5340:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1269,
                        "name": "founder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "5351:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1270,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1221,
                          "src": "5360:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5368:13:7",
                        "memberName": "founderTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1022,
                        "src": "5360:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "666f756e646572",
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5383:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_caa6459ec81872a8250a28a4b93bd1b544f7a69ba2fd6ba05ca9b676ef5b1a9c",
                          "typeString": "literal_string \"founder\""
                        },
                        "value": "founder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_caa6459ec81872a8250a28a4b93bd1b544f7a69ba2fd6ba05ca9b676ef5b1a9c",
                          "typeString": "literal_string \"founder\""
                        }
                      ],
                      "id": 1267,
                      "name": "EquityDistributed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "5322:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,string memory)"
                      }
                    },
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5322:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1274,
                  "nodeType": "EmitStatement",
                  "src": "5317:76:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1276,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1212,
                        "src": "5426:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1277,
                        "name": "feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "5437:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1278,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1221,
                          "src": "5450:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5458:14:7",
                        "memberName": "platformTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1030,
                        "src": "5450:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "706c6174666f726d",
                        "id": 1280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5474:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cb058642d3f17bc460bdd6eab42c21564f6b5228beab6a905a2eb32727c49d1",
                          "typeString": "literal_string \"platform\""
                        },
                        "value": "platform"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3cb058642d3f17bc460bdd6eab42c21564f6b5228beab6a905a2eb32727c49d1",
                          "typeString": "literal_string \"platform\""
                        }
                      ],
                      "id": 1275,
                      "name": "EquityDistributed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "5408:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,string memory)"
                      }
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5408:77:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1282,
                  "nodeType": "EmitStatement",
                  "src": "5403:82:7"
                }
              ]
            },
            "documentation": {
              "id": 1210,
              "nodeType": "StructuredDocumentation",
              "src": "4507:155:7",
              "text": " @dev Distributes founder equity for a project\n @param projectId The project identifier\n @param founder The founder's address"
            },
            "functionSelector": "2c5e5215",
            "id": 1284,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1216,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4745:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "4745:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4745:9:7"
              }
            ],
            "name": "distributeFounderEquity",
            "nameLocation": "4676:23:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1212,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "4708:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "4700:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1211,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1214,
                  "mutability": "mutable",
                  "name": "founder",
                  "nameLocation": "4727:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "4719:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4719:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4699:36:7"
            },
            "returnParameters": {
              "id": 1218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4755:0:7"
            },
            "scope": 1619,
            "src": "4667:825:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1358,
              "nodeType": "Block",
              "src": "5832:697:7",
              "statements": [
                {
                  "assignments": [
                    1298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1298,
                      "mutability": "mutable",
                      "name": "project",
                      "nameLocation": "5863:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1358,
                      "src": "5842:28:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                        "typeString": "struct ProVibeToken.ProjectToken"
                      },
                      "typeName": {
                        "id": 1297,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1296,
                          "name": "ProjectToken",
                          "nameLocations": [
                            "5842:12:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1033,
                          "src": "5842:12:7"
                        },
                        "referencedDeclaration": 1033,
                        "src": "5842:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1302,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1299,
                      "name": "projectTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "5873:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProjectToken_$1033_storage_$",
                        "typeString": "mapping(bytes32 => struct ProVibeToken.ProjectToken storage ref)"
                      }
                    },
                    "id": 1301,
                    "indexExpression": {
                      "id": 1300,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1287,
                      "src": "5887:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5873:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectToken_$1033_storage",
                      "typeString": "struct ProVibeToken.ProjectToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5842:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1304,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1298,
                          "src": "5915:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5923:6:7",
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1018,
                        "src": "5915:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a65637420646f6573206e6f74206578697374",
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5931:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        },
                        "value": "Project does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        }
                      ],
                      "id": 1303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5907:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1310,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1298,
                          "src": "5974:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5982:11:7",
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1032,
                        "src": "5974:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a656374206e6f7420696e697469616c697a6564",
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5995:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_312184270bc26fab87ce886eda1ac45037d1c44fd389ea58730bd6b67c7e2429",
                          "typeString": "literal_string \"Project not initialized\""
                        },
                        "value": "Project not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_312184270bc26fab87ce886eda1ac45037d1c44fd389ea58730bd6b67c7e2429",
                          "typeString": "literal_string \"Project not initialized\""
                        }
                      ],
                      "id": 1309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5966:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5966:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1314,
                  "nodeType": "ExpressionStatement",
                  "src": "5966:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1316,
                          "name": "developer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1289,
                          "src": "6039:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6060:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6052:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1317,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6052:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6052:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6039:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446576656c6f70657220616464726573732063616e6e6f74206265207a65726f",
                        "id": 1322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6064:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ac24a8f85d67e5bb75b2d11904c1c1ac3fc35f5d5b08ebc6402bfa83e518b4",
                          "typeString": "literal_string \"Developer address cannot be zero\""
                        },
                        "value": "Developer address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ac24a8f85d67e5bb75b2d11904c1c1ac3fc35f5d5b08ebc6402bfa83e518b4",
                          "typeString": "literal_string \"Developer address cannot be zero\""
                        }
                      ],
                      "id": 1315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6031:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6031:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1324,
                  "nodeType": "ExpressionStatement",
                  "src": "6031:68:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1326,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1291,
                          "src": "6117:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6126:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6117:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 1329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6129:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 1325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6109:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6109:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1331,
                  "nodeType": "ExpressionStatement",
                  "src": "6109:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1333,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1291,
                          "src": "6179:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1334,
                            "name": "project",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1298,
                            "src": "6189:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                              "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                            }
                          },
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6197:15:7",
                          "memberName": "developerTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1024,
                          "src": "6189:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6179:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206578636565647320617661696c61626c6520646576656c6f70657220746f6b656e73",
                        "id": 1337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6214:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d299fcc5aa41c89d0dbed980619da4d0886cfbfcbd8108a2caf1d9394bd3c8e5",
                          "typeString": "literal_string \"Amount exceeds available developer tokens\""
                        },
                        "value": "Amount exceeds available developer tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d299fcc5aa41c89d0dbed980619da4d0886cfbfcbd8108a2caf1d9394bd3c8e5",
                          "typeString": "literal_string \"Amount exceeds available developer tokens\""
                        }
                      ],
                      "id": 1332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6171:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6171:87:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1339,
                  "nodeType": "ExpressionStatement",
                  "src": "6171:87:7"
                },
                {
                  "expression": {
                    "id": 1344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1340,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "6322:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                        }
                      },
                      "id": 1342,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6330:15:7",
                      "memberName": "developerTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1024,
                      "src": "6322:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1343,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1291,
                      "src": "6349:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6322:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1345,
                  "nodeType": "ExpressionStatement",
                  "src": "6322:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1347,
                        "name": "developer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "6420:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1348,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1291,
                        "src": "6431:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1346,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "6414:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6414:24:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1350,
                  "nodeType": "ExpressionStatement",
                  "src": "6414:24:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1352,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1287,
                        "src": "6480:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1353,
                        "name": "developer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "6491:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1354,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1291,
                        "src": "6502:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "646576656c6f706572",
                        "id": 1355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6510:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_caefa3c0dff677c8c8a38abebd6abe57c7517800f054a203cb2487429086053d",
                          "typeString": "literal_string \"developer\""
                        },
                        "value": "developer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_caefa3c0dff677c8c8a38abebd6abe57c7517800f054a203cb2487429086053d",
                          "typeString": "literal_string \"developer\""
                        }
                      ],
                      "id": 1351,
                      "name": "EquityDistributed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "6462:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,string memory)"
                      }
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6462:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1357,
                  "nodeType": "EmitStatement",
                  "src": "6457:65:7"
                }
              ]
            },
            "documentation": {
              "id": 1285,
              "nodeType": "StructuredDocumentation",
              "src": "5502:217:7",
              "text": " @dev Distributes developer equity for a project\n @param projectId The project identifier\n @param developer The developer's address\n @param amount The amount of tokens to distribute"
            },
            "functionSelector": "05eb34e9",
            "id": 1359,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1293,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5822:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "5822:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5822:9:7"
              }
            ],
            "name": "distributeDeveloperEquity",
            "nameLocation": "5733:25:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1287,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "5767:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1359,
                  "src": "5759:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5759:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1289,
                  "mutability": "mutable",
                  "name": "developer",
                  "nameLocation": "5786:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1359,
                  "src": "5778:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5778:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1291,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5805:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1359,
                  "src": "5797:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5797:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5758:54:7"
            },
            "returnParameters": {
              "id": 1295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5832:0:7"
            },
            "scope": 1619,
            "src": "5724:805:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1433,
              "nodeType": "Block",
              "src": "6875:689:7",
              "statements": [
                {
                  "assignments": [
                    1373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1373,
                      "mutability": "mutable",
                      "name": "project",
                      "nameLocation": "6906:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1433,
                      "src": "6885:28:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                        "typeString": "struct ProVibeToken.ProjectToken"
                      },
                      "typeName": {
                        "id": 1372,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1371,
                          "name": "ProjectToken",
                          "nameLocations": [
                            "6885:12:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1033,
                          "src": "6885:12:7"
                        },
                        "referencedDeclaration": 1033,
                        "src": "6885:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1377,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1374,
                      "name": "projectTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "6916:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProjectToken_$1033_storage_$",
                        "typeString": "mapping(bytes32 => struct ProVibeToken.ProjectToken storage ref)"
                      }
                    },
                    "id": 1376,
                    "indexExpression": {
                      "id": 1375,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1362,
                      "src": "6930:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6916:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectToken_$1033_storage",
                      "typeString": "struct ProVibeToken.ProjectToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6885:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1379,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1373,
                          "src": "6958:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1380,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6966:6:7",
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1018,
                        "src": "6958:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a65637420646f6573206e6f74206578697374",
                        "id": 1381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6974:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        },
                        "value": "Project does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        }
                      ],
                      "id": 1378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6950:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6950:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1383,
                  "nodeType": "ExpressionStatement",
                  "src": "6950:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1385,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1373,
                          "src": "7017:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7025:11:7",
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1032,
                        "src": "7017:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a656374206e6f7420696e697469616c697a6564",
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7038:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_312184270bc26fab87ce886eda1ac45037d1c44fd389ea58730bd6b67c7e2429",
                          "typeString": "literal_string \"Project not initialized\""
                        },
                        "value": "Project not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_312184270bc26fab87ce886eda1ac45037d1c44fd389ea58730bd6b67c7e2429",
                          "typeString": "literal_string \"Project not initialized\""
                        }
                      ],
                      "id": 1384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7009:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7009:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1389,
                  "nodeType": "ExpressionStatement",
                  "src": "7009:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1391,
                          "name": "legalExpert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "7082:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7105:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7097:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1392,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7097:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7097:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7082:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6567616c2065787065727420616464726573732063616e6e6f74206265207a65726f",
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7109:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50d4373b4980487065b7c10fad4b742dd431dfb9ff2d70a8752fb0103418f0ff",
                          "typeString": "literal_string \"Legal expert address cannot be zero\""
                        },
                        "value": "Legal expert address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50d4373b4980487065b7c10fad4b742dd431dfb9ff2d70a8752fb0103418f0ff",
                          "typeString": "literal_string \"Legal expert address cannot be zero\""
                        }
                      ],
                      "id": 1390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7074:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7074:73:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1399,
                  "nodeType": "ExpressionStatement",
                  "src": "7074:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1401,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1366,
                          "src": "7165:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7174:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7165:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 1404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7177:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 1400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7157:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7157:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1406,
                  "nodeType": "ExpressionStatement",
                  "src": "7157:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1408,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1366,
                          "src": "7227:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1409,
                            "name": "project",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "7237:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                              "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7245:11:7",
                          "memberName": "legalTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1026,
                          "src": "7237:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7227:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206578636565647320617661696c61626c65206c6567616c20746f6b656e73",
                        "id": 1412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7258:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eccdbe655397adf6eb73193209110473437cfdc22c0c94192b8577d38be4ad7d",
                          "typeString": "literal_string \"Amount exceeds available legal tokens\""
                        },
                        "value": "Amount exceeds available legal tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eccdbe655397adf6eb73193209110473437cfdc22c0c94192b8577d38be4ad7d",
                          "typeString": "literal_string \"Amount exceeds available legal tokens\""
                        }
                      ],
                      "id": 1407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7219:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7219:79:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "7219:79:7"
                },
                {
                  "expression": {
                    "id": 1419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1415,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1373,
                        "src": "7358:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                        }
                      },
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7366:11:7",
                      "memberName": "legalTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1026,
                      "src": "7358:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1418,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "7381:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7358:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1420,
                  "nodeType": "ExpressionStatement",
                  "src": "7358:29:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1422,
                        "name": "legalExpert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "7455:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1423,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "7468:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1421,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "7449:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7449:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "7449:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1427,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1362,
                        "src": "7517:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1428,
                        "name": "legalExpert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "7528:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1429,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "7541:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6c6567616c",
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7549:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_585f0ffac4590ed956ef7d99c1177e00c7f240a28094f8eaffb94c5a559815a3",
                          "typeString": "literal_string \"legal\""
                        },
                        "value": "legal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_585f0ffac4590ed956ef7d99c1177e00c7f240a28094f8eaffb94c5a559815a3",
                          "typeString": "literal_string \"legal\""
                        }
                      ],
                      "id": 1426,
                      "name": "EquityDistributed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "7499:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,string memory)"
                      }
                    },
                    "id": 1431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7499:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1432,
                  "nodeType": "EmitStatement",
                  "src": "7494:63:7"
                }
              ]
            },
            "documentation": {
              "id": 1360,
              "nodeType": "StructuredDocumentation",
              "src": "6539:225:7",
              "text": " @dev Distributes legal expert equity for a project\n @param projectId The project identifier\n @param legalExpert The legal expert's address\n @param amount The amount of tokens to distribute"
            },
            "functionSelector": "68868700",
            "id": 1434,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1368,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6865:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "6865:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6865:9:7"
              }
            ],
            "name": "distributeLegalEquity",
            "nameLocation": "6778:21:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1362,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "6808:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1434,
                  "src": "6800:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6800:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1364,
                  "mutability": "mutable",
                  "name": "legalExpert",
                  "nameLocation": "6827:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1434,
                  "src": "6819:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6819:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6848:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1434,
                  "src": "6840:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6840:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6799:56:7"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6875:0:7"
            },
            "scope": 1619,
            "src": "6769:795:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1508,
              "nodeType": "Block",
              "src": "7899:687:7",
              "statements": [
                {
                  "assignments": [
                    1448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1448,
                      "mutability": "mutable",
                      "name": "project",
                      "nameLocation": "7930:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1508,
                      "src": "7909:28:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                        "typeString": "struct ProVibeToken.ProjectToken"
                      },
                      "typeName": {
                        "id": 1447,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1446,
                          "name": "ProjectToken",
                          "nameLocations": [
                            "7909:12:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1033,
                          "src": "7909:12:7"
                        },
                        "referencedDeclaration": 1033,
                        "src": "7909:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1452,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1449,
                      "name": "projectTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "7940:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProjectToken_$1033_storage_$",
                        "typeString": "mapping(bytes32 => struct ProVibeToken.ProjectToken storage ref)"
                      }
                    },
                    "id": 1451,
                    "indexExpression": {
                      "id": 1450,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1437,
                      "src": "7954:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7940:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectToken_$1033_storage",
                      "typeString": "struct ProVibeToken.ProjectToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7909:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1454,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "7982:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7990:6:7",
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1018,
                        "src": "7982:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a65637420646f6573206e6f74206578697374",
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7998:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        },
                        "value": "Project does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        }
                      ],
                      "id": 1453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7974:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7974:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "7974:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1460,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "8041:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8049:11:7",
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1032,
                        "src": "8041:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a656374206e6f7420696e697469616c697a6564",
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8062:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_312184270bc26fab87ce886eda1ac45037d1c44fd389ea58730bd6b67c7e2429",
                          "typeString": "literal_string \"Project not initialized\""
                        },
                        "value": "Project not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_312184270bc26fab87ce886eda1ac45037d1c44fd389ea58730bd6b67c7e2429",
                          "typeString": "literal_string \"Project not initialized\""
                        }
                      ],
                      "id": 1459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8033:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8033:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1464,
                  "nodeType": "ExpressionStatement",
                  "src": "8033:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1466,
                          "name": "investor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1439,
                          "src": "8106:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8126:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8118:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1467,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8118:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8118:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8106:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746f7220616464726573732063616e6e6f74206265207a65726f",
                        "id": 1472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8130:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_743dad8246c60990822f488eed7690856b9c2488c121e0e0344ababa282aa730",
                          "typeString": "literal_string \"Investor address cannot be zero\""
                        },
                        "value": "Investor address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_743dad8246c60990822f488eed7690856b9c2488c121e0e0344ababa282aa730",
                          "typeString": "literal_string \"Investor address cannot be zero\""
                        }
                      ],
                      "id": 1465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8098:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8098:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1474,
                  "nodeType": "ExpressionStatement",
                  "src": "8098:66:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1476,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1441,
                          "src": "8182:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8191:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8182:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8194:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 1475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8174:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8174:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1481,
                  "nodeType": "ExpressionStatement",
                  "src": "8174:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1483,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1441,
                          "src": "8244:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1484,
                            "name": "project",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1448,
                            "src": "8254:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                              "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                            }
                          },
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8262:14:7",
                          "memberName": "investorTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1028,
                          "src": "8254:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8244:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206578636565647320617661696c61626c6520696e766573746f7220746f6b656e73",
                        "id": 1487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8278:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_488e6afa36058a2415aa8adb894b68713482b46883e4500103262012fc41cb69",
                          "typeString": "literal_string \"Amount exceeds available investor tokens\""
                        },
                        "value": "Amount exceeds available investor tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_488e6afa36058a2415aa8adb894b68713482b46883e4500103262012fc41cb69",
                          "typeString": "literal_string \"Amount exceeds available investor tokens\""
                        }
                      ],
                      "id": 1482,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8236:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8236:85:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1489,
                  "nodeType": "ExpressionStatement",
                  "src": "8236:85:7"
                },
                {
                  "expression": {
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1490,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "8384:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                        }
                      },
                      "id": 1492,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8392:14:7",
                      "memberName": "investorTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1028,
                      "src": "8384:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1493,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1441,
                      "src": "8410:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8384:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "8384:32:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1497,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "8480:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1498,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1441,
                        "src": "8490:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1496,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "8474:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8474:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1500,
                  "nodeType": "ExpressionStatement",
                  "src": "8474:23:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1502,
                        "name": "projectId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1437,
                        "src": "8539:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1503,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "8550:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1504,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1441,
                        "src": "8560:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e766573746f72",
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8568:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4defcbe185079e8fa77f7b9fc7063c614fab765cfcb6e3ee77b6d44cbd033288",
                          "typeString": "literal_string \"investor\""
                        },
                        "value": "investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4defcbe185079e8fa77f7b9fc7063c614fab765cfcb6e3ee77b6d44cbd033288",
                          "typeString": "literal_string \"investor\""
                        }
                      ],
                      "id": 1501,
                      "name": "EquityDistributed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "8521:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,string memory)"
                      }
                    },
                    "id": 1506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8521:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1507,
                  "nodeType": "EmitStatement",
                  "src": "8516:63:7"
                }
              ]
            },
            "documentation": {
              "id": 1435,
              "nodeType": "StructuredDocumentation",
              "src": "7574:214:7",
              "text": " @dev Distributes investor equity for a project\n @param projectId The project identifier\n @param investor The investor's address\n @param amount The amount of tokens to distribute"
            },
            "functionSelector": "c8490425",
            "id": 1509,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1444,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1443,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7889:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "7889:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "7889:9:7"
              }
            ],
            "name": "distributeInvestorEquity",
            "nameLocation": "7802:24:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "7835:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1509,
                  "src": "7827:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1436,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7827:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1439,
                  "mutability": "mutable",
                  "name": "investor",
                  "nameLocation": "7854:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1509,
                  "src": "7846:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7846:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7872:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1509,
                  "src": "7864:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7864:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7826:53:7"
            },
            "returnParameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7899:0:7"
            },
            "scope": 1619,
            "src": "7793:793:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1528,
              "nodeType": "Block",
              "src": "8804:114:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1518,
                          "name": "newFeePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1512,
                          "src": "8822:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "353030",
                          "id": 1519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8839:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
                        "src": "8822:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4665652063616e6e6f7420657863656564203525",
                        "id": 1521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8844:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab795b553f8547a7a0b74dc001d68a7e47d0857d2790404036d55db515bc073e",
                          "typeString": "literal_string \"Fee cannot exceed 5%\""
                        },
                        "value": "Fee cannot exceed 5%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab795b553f8547a7a0b74dc001d68a7e47d0857d2790404036d55db515bc073e",
                          "typeString": "literal_string \"Fee cannot exceed 5%\""
                        }
                      ],
                      "id": 1517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8814:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8814:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1523,
                  "nodeType": "ExpressionStatement",
                  "src": "8814:53:7"
                },
                {
                  "expression": {
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1524,
                      "name": "platformFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "8877:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1525,
                      "name": "newFeePercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1512,
                      "src": "8898:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8877:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "8877:34:7"
                }
              ]
            },
            "documentation": {
              "id": 1510,
              "nodeType": "StructuredDocumentation",
              "src": "8596:134:7",
              "text": " @dev Updates the platform fee percentage\n @param newFeePercent New fee percentage (in basis points, 1% = 100)"
            },
            "functionSelector": "aa0b5988",
            "id": 1529,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1515,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1514,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8794:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "8794:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "8794:9:7"
              }
            ],
            "name": "updatePlatformFee",
            "nameLocation": "8744:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1512,
                  "mutability": "mutable",
                  "name": "newFeePercent",
                  "nameLocation": "8770:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1529,
                  "src": "8762:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8762:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8761:23:7"
            },
            "returnParameters": {
              "id": 1516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8804:0:7"
            },
            "scope": 1619,
            "src": "8735:183:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1551,
              "nodeType": "Block",
              "src": "9125:131:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1538,
                          "name": "newFeeReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1532,
                          "src": "9143:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9169:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9161:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1539,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9161:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9161:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9143:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4665652072656365697665722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9173:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94b3f061c7373fea396995302e7e4b7fbac2dcfa126de20e682c32eca8160c62",
                          "typeString": "literal_string \"Fee receiver cannot be zero address\""
                        },
                        "value": "Fee receiver cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94b3f061c7373fea396995302e7e4b7fbac2dcfa126de20e682c32eca8160c62",
                          "typeString": "literal_string \"Fee receiver cannot be zero address\""
                        }
                      ],
                      "id": 1537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9135:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9135:76:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "9135:76:7"
                },
                {
                  "expression": {
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1547,
                      "name": "feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "9221:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1548,
                      "name": "newFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1532,
                      "src": "9235:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9221:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "9221:28:7"
                }
              ]
            },
            "documentation": {
              "id": 1530,
              "nodeType": "StructuredDocumentation",
              "src": "8928:122:7",
              "text": " @dev Updates the fee receiver address\n @param newFeeReceiver New address to receive platform fees"
            },
            "functionSelector": "c69bebe4",
            "id": 1552,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1534,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9115:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "9115:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "9115:9:7"
              }
            ],
            "name": "updateFeeReceiver",
            "nameLocation": "9064:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1532,
                  "mutability": "mutable",
                  "name": "newFeeReceiver",
                  "nameLocation": "9090:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1552,
                  "src": "9082:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9082:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9081:24:7"
            },
            "returnParameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9125:0:7"
            },
            "scope": 1619,
            "src": "9055:201:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1607,
              "nodeType": "Block",
              "src": "9644:394:7",
              "statements": [
                {
                  "assignments": [
                    1564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1564,
                      "mutability": "mutable",
                      "name": "project",
                      "nameLocation": "9675:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1607,
                      "src": "9654:28:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                        "typeString": "struct ProVibeToken.ProjectToken"
                      },
                      "typeName": {
                        "id": 1563,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1562,
                          "name": "ProjectToken",
                          "nameLocations": [
                            "9654:12:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1033,
                          "src": "9654:12:7"
                        },
                        "referencedDeclaration": 1033,
                        "src": "9654:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1568,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1565,
                      "name": "projectTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "9685:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProjectToken_$1033_storage_$",
                        "typeString": "mapping(bytes32 => struct ProVibeToken.ProjectToken storage ref)"
                      }
                    },
                    "id": 1567,
                    "indexExpression": {
                      "id": 1566,
                      "name": "projectId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "9699:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9685:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProjectToken_$1033_storage",
                      "typeString": "struct ProVibeToken.ProjectToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9654:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1570,
                          "name": "project",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1564,
                          "src": "9727:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                            "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                          }
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9735:6:7",
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1018,
                        "src": "9727:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a65637420646f6573206e6f74206578697374",
                        "id": 1572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9743:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        },
                        "value": "Project does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e08e06f9b1269937dc75dfb12c82fe838d703b975ba8e7632e8a86f640ff75eb",
                          "typeString": "literal_string \"Project does not exist\""
                        }
                      ],
                      "id": 1569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9719:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9719:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1574,
                  "nodeType": "ExpressionStatement",
                  "src": "9719:49:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1575,
                      "name": "role",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "9791:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9799:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9791:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1581,
                  "nodeType": "IfStatement",
                  "src": "9787:43:7",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "id": 1578,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "9809:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                        }
                      },
                      "id": 1579,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9817:13:7",
                      "memberName": "founderTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1022,
                      "src": "9809:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1561,
                    "id": 1580,
                    "nodeType": "Return",
                    "src": "9802:28:7"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1582,
                      "name": "role",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "9844:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 1583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9852:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "9844:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1588,
                  "nodeType": "IfStatement",
                  "src": "9840:45:7",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "id": 1585,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "9862:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                        }
                      },
                      "id": 1586,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9870:15:7",
                      "memberName": "developerTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1024,
                      "src": "9862:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1561,
                    "id": 1587,
                    "nodeType": "Return",
                    "src": "9855:30:7"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1589,
                      "name": "role",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "9899:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 1590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9907:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "9899:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1595,
                  "nodeType": "IfStatement",
                  "src": "9895:41:7",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "id": 1592,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "9917:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                        }
                      },
                      "id": 1593,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9925:11:7",
                      "memberName": "legalTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1026,
                      "src": "9917:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1561,
                    "id": 1594,
                    "nodeType": "Return",
                    "src": "9910:26:7"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1596,
                      "name": "role",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "9950:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "34",
                      "id": 1597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9958:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "9950:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1602,
                  "nodeType": "IfStatement",
                  "src": "9946:44:7",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "id": 1599,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "9968:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectToken_$1033_storage_ptr",
                          "typeString": "struct ProVibeToken.ProjectToken storage pointer"
                        }
                      },
                      "id": 1600,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9976:14:7",
                      "memberName": "investorTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1028,
                      "src": "9968:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1561,
                    "id": 1601,
                    "nodeType": "Return",
                    "src": "9961:29:7"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "496e76616c696420726f6c65",
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10016:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ee123eb543bdd8590077b2cb2e4bef09592d12358577ddeb1d319d63db03eeb",
                          "typeString": "literal_string \"Invalid role\""
                        },
                        "value": "Invalid role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5ee123eb543bdd8590077b2cb2e4bef09592d12358577ddeb1d319d63db03eeb",
                          "typeString": "literal_string \"Invalid role\""
                        }
                      ],
                      "id": 1603,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "10009:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10009:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1606,
                  "nodeType": "ExpressionStatement",
                  "src": "10009:22:7"
                }
              ]
            },
            "documentation": {
              "id": 1553,
              "nodeType": "StructuredDocumentation",
              "src": "9266:282:7",
              "text": " @dev Gets the remaining available tokens for a specific role in a project\n @param projectId The project identifier\n @param role The role (1=founder, 2=developer, 3=legal, 4=investor)\n @return The amount of tokens available for the specified role"
            },
            "functionSelector": "baa84f72",
            "id": 1608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableTokens",
            "nameLocation": "9562:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "projectId",
                  "nameLocation": "9589:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "9581:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9581:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "9606:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "9600:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9600:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9580:31:7"
            },
            "returnParameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "9635:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9635:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9634:9:7"
            },
            "scope": 1619,
            "src": "9553:485:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              372
            ],
            "body": {
              "id": 1617,
              "nodeType": "Block",
              "src": "10181:36:7",
              "statements": [
                {
                  "expression": {
                    "id": 1615,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1006,
                    "src": "10198:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1614,
                  "id": 1616,
                  "nodeType": "Return",
                  "src": "10191:19:7"
                }
              ]
            },
            "documentation": {
              "id": 1609,
              "nodeType": "StructuredDocumentation",
              "src": "10048:66:7",
              "text": " @dev Returns the current total supply of tokens"
            },
            "functionSelector": "18160ddd",
            "id": 1618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "10128:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1611,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10154:8:7"
            },
            "parameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10139:2:7"
            },
            "returnParameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1618,
                  "src": "10172:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10172:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10171:9:7"
            },
            "scope": 1619,
            "src": "10119:98:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1620,
        "src": "431:9788:7",
        "usedErrors": [
          13,
          18,
          159,
          164,
          169,
          178,
          183,
          188
        ],
        "usedEvents": [
          24,
          811,
          820,
          1039,
          1049
        ]
      }
    ],
    "src": "32:10187:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "1743194559533": {
      "events": {},
      "links": {},
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "transactionHash": "0x2c88c6b2bf677c267c031bc23160465e0965a638c92392715fb4f0f407713b45"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-28T21:19:31.356Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "ERC20 token for the ProVibeCoder platform This token represents equity in projects and can be distributed to contributors based on their work.",
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
      },
      "constructor": {
        "details": "Constructor - initializes the token",
        "params": {
          "_feeReceiver": "The address to receive platform fees",
          "initialOwner": "The initial owner of the contract"
        }
      },
      "createProjectTokens(bytes32,uint256,uint256,uint256,uint256,uint256)": {
        "details": "Creates tokens for a new project",
        "params": {
          "developerPercent": "Percentage of tokens allocated to developers (in basis points)",
          "founderPercent": "Percentage of tokens allocated to the founder (in basis points, 1% = 100)",
          "investorPercent": "Percentage of tokens allocated to investors (in basis points)",
          "legalPercent": "Percentage of tokens allocated to legal experts (in basis points)",
          "projectId": "Unique identifier for the project",
          "totalTokens": "Total number of tokens to allocate for this project"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "distributeDeveloperEquity(bytes32,address,uint256)": {
        "details": "Distributes developer equity for a project",
        "params": {
          "amount": "The amount of tokens to distribute",
          "developer": "The developer's address",
          "projectId": "The project identifier"
        }
      },
      "distributeFounderEquity(bytes32,address)": {
        "details": "Distributes founder equity for a project",
        "params": {
          "founder": "The founder's address",
          "projectId": "The project identifier"
        }
      },
      "distributeInvestorEquity(bytes32,address,uint256)": {
        "details": "Distributes investor equity for a project",
        "params": {
          "amount": "The amount of tokens to distribute",
          "investor": "The investor's address",
          "projectId": "The project identifier"
        }
      },
      "distributeLegalEquity(bytes32,address,uint256)": {
        "details": "Distributes legal expert equity for a project",
        "params": {
          "amount": "The amount of tokens to distribute",
          "legalExpert": "The legal expert's address",
          "projectId": "The project identifier"
        }
      },
      "getAvailableTokens(bytes32,uint8)": {
        "details": "Gets the remaining available tokens for a specific role in a project",
        "params": {
          "projectId": "The project identifier",
          "role": "The role (1=founder, 2=developer, 3=legal, 4=investor)"
        },
        "returns": {
          "_0": "The amount of tokens available for the specified role"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "Returns the current total supply of tokens"
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateFeeReceiver(address)": {
        "details": "Updates the fee receiver address",
        "params": {
          "newFeeReceiver": "New address to receive platform fees"
        }
      },
      "updatePlatformFee(uint256)": {
        "details": "Updates the platform fee percentage",
        "params": {
          "newFeePercent": "New fee percentage (in basis points, 1% = 100)"
        }
      }
    },
    "title": "ProVibeToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}